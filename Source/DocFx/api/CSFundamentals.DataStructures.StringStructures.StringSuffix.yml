### YamlMime:ManagedReference
items:
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
  commentId: T:CSFundamentals.DataStructures.StringStructures.StringSuffix
  id: StringSuffix
  parent: CSFundamentals.DataStructures.StringStructures
  children:
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.#ctor(System.Int32,System.Char,System.Char)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals(System.Object)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.GetHashCode
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Equality(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThan(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Inequality(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThan(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.RankPair
  - CSFundamentals.DataStructures.StringStructures.StringSuffix.StartIndex
  langs:
  - csharp
  - vb
  name: StringSuffix
  nameWithType: StringSuffix
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
  type: Class
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: StringSuffix
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 27
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nStores information about a suffix of a string. \n"
  example: []
  syntax:
    content: 'public class StringSuffix : IEquatable<StringSuffix>, IComparable<StringSuffix>'
    content.vb: >-
      Public Class StringSuffix
          Implements IEquatable(Of StringSuffix), IComparable(Of StringSuffix)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{CSFundamentals.DataStructures.StringStructures.StringSuffix}
  - System.IComparable{CSFundamentals.DataStructures.StringStructures.StringSuffix}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.StartIndex
  commentId: P:CSFundamentals.DataStructures.StringStructures.StringSuffix.StartIndex
  id: StartIndex
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: StartIndex
  nameWithType: StringSuffix.StartIndex
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.StartIndex
  type: Property
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: StartIndex
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 33
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nSpecifies the 0-based starting index of this suffix in the string\nNotice that there is no need to store the end index, as it is always string.Length - 1, based on the suffix definition. \n"
  example: []
  syntax:
    content: public int StartIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property StartIndex As Integer
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.StartIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.RankPair
  commentId: P:CSFundamentals.DataStructures.StringStructures.StringSuffix.RankPair
  id: RankPair
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: RankPair
  nameWithType: StringSuffix.RankPair
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.RankPair
  type: Property
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: RankPair
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 39
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nSpecifies the rank for (starting char, second char) of the suffix. If second char does not exist, -1 rather than rank. \nRank of a character is computing using: &apos;char&apos;-&apos;a&apos;. \n"
  example: []
  syntax:
    content: public int[] RankPair { get; set; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public Property RankPair As Integer()
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.RankPair*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.#ctor(System.Int32,System.Char,System.Char)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.#ctor(System.Int32,System.Char,System.Char)
  id: '#ctor(System.Int32,System.Char,System.Char)'
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: StringSuffix(Int32, Char, Char)
  nameWithType: StringSuffix.StringSuffix(Int32, Char, Char)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.StringSuffix(System.Int32, System.Char, System.Char)
  type: Constructor
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: .ctor
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 48
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nTODO\n"
  example: []
  syntax:
    content: public StringSuffix(int startIndex, char firstChar, char secondChar)
    parameters:
    - id: startIndex
      type: System.Int32
      description: ''
    - id: firstChar
      type: System.Char
      description: ''
    - id: secondChar
      type: System.Char
      description: 'If -1, means there is no second char. '
    content.vb: Public Sub New(startIndex As Integer, firstChar As Char, secondChar As Char)
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  id: Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: Equals(StringSuffix)
  nameWithType: StringSuffix.Equals(StringSuffix)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  type: Method
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Equals
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 60
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nCompares the current object to the given object for equality. \n"
  example: []
  syntax:
    content: public bool Equals(StringSuffix other)
    parameters:
    - id: other
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'An object of type StringSuffix. '
    return:
      type: System.Boolean
      description: 'True if the two objects are equal, and false otherwise. '
    content.vb: Public Function Equals(other As StringSuffix) As Boolean
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals*
  implements:
  - System.IEquatable{CSFundamentals.DataStructures.StringStructures.StringSuffix}.Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals(System.Object)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals(System.Object)
  id: Equals(System.Object)
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: StringSuffix.Equals(Object)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Equals
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 80
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nCompares the current object to the given object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: 'An object to compare to the current object. '
    return:
      type: System.Boolean
      description: 'True if the two objects are equal, and false otherwise. '
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.GetHashCode
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.GetHashCode
  id: GetHashCode
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: StringSuffix.GetHashCode()
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.GetHashCode()
  type: Method
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: GetHashCode
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 99
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nComputes a hash code for this object. \n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  id: CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: CompareTo(StringSuffix)
  nameWithType: StringSuffix.CompareTo(StringSuffix)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  type: Method
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: CompareTo
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 109
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nCompares the current object to another object of the same type. \n"
  example: []
  syntax:
    content: public int CompareTo(StringSuffix other)
    parameters:
    - id: other
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'An object of type StringSuffix. '
    return:
      type: System.Int32
      description: '0 if they are equal, 1 if the current object is bigger and -1 otherwise. '
    content.vb: Public Function CompareTo(other As StringSuffix) As Integer
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.CompareTo*
  implements:
  - System.IComparable{CSFundamentals.DataStructures.StringStructures.StringSuffix}.CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  id: op_LessThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(StringSuffix, StringSuffix)
  nameWithType: StringSuffix.LessThanOrEqual(StringSuffix, StringSuffix)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.LessThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix, CSFundamentals.DataStructures.StringStructures.StringSuffix)
  type: Operator
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: op_LessThanOrEqual
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 129
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nOverrides smaller than /equal operator. \n"
  example: []
  syntax:
    content: public static bool operator <=(StringSuffix current, StringSuffix other)
    parameters:
    - id: current
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Current object of type StringSuffix. '
    - id: other
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Another object of type StringSuffix. '
    return:
      type: System.Boolean
      description: 'True if the current object is smaller than or equal to the other object. '
    content.vb: Public Shared Operator <=(current As StringSuffix, other As StringSuffix) As Boolean
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  id: op_GreaterThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(StringSuffix, StringSuffix)
  nameWithType: StringSuffix.GreaterThanOrEqual(StringSuffix, StringSuffix)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.GreaterThanOrEqual(CSFundamentals.DataStructures.StringStructures.StringSuffix, CSFundamentals.DataStructures.StringStructures.StringSuffix)
  type: Operator
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: op_GreaterThanOrEqual
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 140
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nOverrides bigger than/equal operator. \n"
  example: []
  syntax:
    content: public static bool operator >=(StringSuffix current, StringSuffix other)
    parameters:
    - id: current
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Current object of type StringSuffix. '
    - id: other
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Another object of type StringSuffix. '
    return:
      type: System.Boolean
      description: 'True if the current object is bigger than or equal to the other object. '
    content.vb: Public Shared Operator >=(current As StringSuffix, other As StringSuffix) As Boolean
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThan(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThan(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  id: op_LessThan(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: LessThan(StringSuffix, StringSuffix)
  nameWithType: StringSuffix.LessThan(StringSuffix, StringSuffix)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.LessThan(CSFundamentals.DataStructures.StringStructures.StringSuffix, CSFundamentals.DataStructures.StringStructures.StringSuffix)
  type: Operator
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: op_LessThan
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 151
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nOverrides smaller than  operator. \n"
  example: []
  syntax:
    content: public static bool operator <(StringSuffix current, StringSuffix other)
    parameters:
    - id: current
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Current object of type StringSuffix. '
    - id: other
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Another object of type StringSuffix. '
    return:
      type: System.Boolean
      description: 'True if the current object is smaller than the other object. '
    content.vb: Public Shared Operator <(current As StringSuffix, other As StringSuffix) As Boolean
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThan(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThan(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  id: op_GreaterThan(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: GreaterThan(StringSuffix, StringSuffix)
  nameWithType: StringSuffix.GreaterThan(StringSuffix, StringSuffix)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.GreaterThan(CSFundamentals.DataStructures.StringStructures.StringSuffix, CSFundamentals.DataStructures.StringStructures.StringSuffix)
  type: Operator
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: op_GreaterThan
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 162
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nOverrides bigger than operator. \n"
  example: []
  syntax:
    content: public static bool operator>(StringSuffix current, StringSuffix other)
    parameters:
    - id: current
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Current object of type StringSuffix. '
    - id: other
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Another object of type StringSuffix. '
    return:
      type: System.Boolean
      description: 'True if the current object is bigger than the other object. '
    content.vb: Public Shared Operator>(current As StringSuffix, other As StringSuffix) As Boolean
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Equality(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Equality(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  id: op_Equality(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: Equality(StringSuffix, StringSuffix)
  nameWithType: StringSuffix.Equality(StringSuffix, StringSuffix)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equality(CSFundamentals.DataStructures.StringStructures.StringSuffix, CSFundamentals.DataStructures.StringStructures.StringSuffix)
  type: Operator
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: op_Equality
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 173
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nOverrides equality operator. \n"
  example: []
  syntax:
    content: public static bool operator ==(StringSuffix current, StringSuffix other)
    parameters:
    - id: current
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Current object of type StringSuffix. '
    - id: other
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Another object of type StringSuffix. '
    return:
      type: System.Boolean
      description: 'True if the current object is equal to the other object. '
    content.vb: Public Shared Operator =(current As StringSuffix, other As StringSuffix) As Boolean
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Inequality(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Inequality(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  id: op_Inequality(CSFundamentals.DataStructures.StringStructures.StringSuffix,CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: CSFundamentals.DataStructures.StringStructures.StringSuffix
  langs:
  - csharp
  - vb
  name: Inequality(StringSuffix, StringSuffix)
  nameWithType: StringSuffix.Inequality(StringSuffix, StringSuffix)
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.Inequality(CSFundamentals.DataStructures.StringStructures.StringSuffix, CSFundamentals.DataStructures.StringStructures.StringSuffix)
  type: Operator
  source:
    remote:
      path: Source/DataStructures/StringStructures/StringSuffix.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: op_Inequality
    path: ../DataStructures/StringStructures/StringSuffix.cs
    startLine: 184
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.DataStructures.StringStructures
  summary: "\nOverrides inequality operator. \n"
  example: []
  syntax:
    content: public static bool operator !=(StringSuffix current, StringSuffix other)
    parameters:
    - id: current
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Current object of type StringSuffix. '
    - id: other
      type: CSFundamentals.DataStructures.StringStructures.StringSuffix
      description: 'Another object of type StringSuffix. '
    return:
      type: System.Boolean
      description: 'True if the current object is not equal to the other object. '
    content.vb: Public Shared Operator <>(current As StringSuffix, other As StringSuffix) As Boolean
  overload: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CSFundamentals.DataStructures.StringStructures
  commentId: N:CSFundamentals.DataStructures.StringStructures
  name: CSFundamentals.DataStructures.StringStructures
  nameWithType: CSFundamentals.DataStructures.StringStructures
  fullName: CSFundamentals.DataStructures.StringStructures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{CSFundamentals.DataStructures.StringStructures.StringSuffix}
  commentId: T:System.IEquatable{CSFundamentals.DataStructures.StringStructures.StringSuffix}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<StringSuffix>
  nameWithType: IEquatable<StringSuffix>
  fullName: System.IEquatable<CSFundamentals.DataStructures.StringStructures.StringSuffix>
  nameWithType.vb: IEquatable(Of StringSuffix)
  fullName.vb: System.IEquatable(Of CSFundamentals.DataStructures.StringStructures.StringSuffix)
  name.vb: IEquatable(Of StringSuffix)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
    name: StringSuffix
    nameWithType: StringSuffix
    fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
    name: StringSuffix
    nameWithType: StringSuffix
    fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{CSFundamentals.DataStructures.StringStructures.StringSuffix}
  commentId: T:System.IComparable{CSFundamentals.DataStructures.StringStructures.StringSuffix}
  parent: System
  definition: System.IComparable`1
  name: IComparable<StringSuffix>
  nameWithType: IComparable<StringSuffix>
  fullName: System.IComparable<CSFundamentals.DataStructures.StringStructures.StringSuffix>
  nameWithType.vb: IComparable(Of StringSuffix)
  fullName.vb: System.IComparable(Of CSFundamentals.DataStructures.StringStructures.StringSuffix)
  name.vb: IComparable(Of StringSuffix)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
    name: StringSuffix
    nameWithType: StringSuffix
    fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
    name: StringSuffix
    nameWithType: StringSuffix
    fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.StartIndex*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.StartIndex
  name: StartIndex
  nameWithType: StringSuffix.StartIndex
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.StartIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.RankPair*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.RankPair
  name: RankPair
  nameWithType: StringSuffix.RankPair
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.RankPair
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.#ctor*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.#ctor
  name: StringSuffix
  nameWithType: StringSuffix.StringSuffix
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.StringSuffix
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals
  name: Equals
  nameWithType: StringSuffix.Equals
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equals
- uid: System.IEquatable{CSFundamentals.DataStructures.StringStructures.StringSuffix}.Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:System.IEquatable{CSFundamentals.DataStructures.StringStructures.StringSuffix}.Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: System.IEquatable{CSFundamentals.DataStructures.StringStructures.StringSuffix}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(StringSuffix)
  nameWithType: IEquatable<StringSuffix>.Equals(StringSuffix)
  fullName: System.IEquatable<CSFundamentals.DataStructures.StringStructures.StringSuffix>.Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  nameWithType.vb: IEquatable(Of StringSuffix).Equals(StringSuffix)
  fullName.vb: System.IEquatable(Of CSFundamentals.DataStructures.StringStructures.StringSuffix).Equals(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<StringSuffix>.Equals
    fullName: System.IEquatable<CSFundamentals.DataStructures.StringStructures.StringSuffix>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
    name: StringSuffix
    nameWithType: StringSuffix
    fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of StringSuffix).Equals
    fullName: System.IEquatable(Of CSFundamentals.DataStructures.StringStructures.StringSuffix).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
    name: StringSuffix
    nameWithType: StringSuffix
    fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
  commentId: T:CSFundamentals.DataStructures.StringStructures.StringSuffix
  parent: CSFundamentals.DataStructures.StringStructures
  name: StringSuffix
  nameWithType: StringSuffix
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.GetHashCode*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.GetHashCode
  name: GetHashCode
  nameWithType: StringSuffix.GetHashCode
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.GetHashCode
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.CompareTo*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.CompareTo
  name: CompareTo
  nameWithType: StringSuffix.CompareTo
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.CompareTo
- uid: System.IComparable{CSFundamentals.DataStructures.StringStructures.StringSuffix}.CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  commentId: M:System.IComparable{CSFundamentals.DataStructures.StringStructures.StringSuffix}.CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  parent: System.IComparable{CSFundamentals.DataStructures.StringStructures.StringSuffix}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(StringSuffix)
  nameWithType: IComparable<StringSuffix>.CompareTo(StringSuffix)
  fullName: System.IComparable<CSFundamentals.DataStructures.StringStructures.StringSuffix>.CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  nameWithType.vb: IComparable(Of StringSuffix).CompareTo(StringSuffix)
  fullName.vb: System.IComparable(Of CSFundamentals.DataStructures.StringStructures.StringSuffix).CompareTo(CSFundamentals.DataStructures.StringStructures.StringSuffix)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<StringSuffix>.CompareTo
    fullName: System.IComparable<CSFundamentals.DataStructures.StringStructures.StringSuffix>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
    name: StringSuffix
    nameWithType: StringSuffix
    fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of StringSuffix).CompareTo
    fullName: System.IComparable(Of CSFundamentals.DataStructures.StringStructures.StringSuffix).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CSFundamentals.DataStructures.StringStructures.StringSuffix
    name: StringSuffix
    nameWithType: StringSuffix
    fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThanOrEqual*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: StringSuffix.LessThanOrEqual
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.LessThanOrEqual
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThanOrEqual*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: StringSuffix.GreaterThanOrEqual
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.GreaterThanOrEqual
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThan*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_LessThan
  name: LessThan
  nameWithType: StringSuffix.LessThan
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.LessThan
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThan*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_GreaterThan
  name: GreaterThan
  nameWithType: StringSuffix.GreaterThan
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.GreaterThan
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Equality*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Equality
  name: Equality
  nameWithType: StringSuffix.Equality
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.Equality
- uid: CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Inequality*
  commentId: Overload:CSFundamentals.DataStructures.StringStructures.StringSuffix.op_Inequality
  name: Inequality
  nameWithType: StringSuffix.Inequality
  fullName: CSFundamentals.DataStructures.StringStructures.StringSuffix.Inequality
