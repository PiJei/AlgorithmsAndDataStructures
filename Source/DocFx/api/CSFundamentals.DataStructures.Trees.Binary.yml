### YamlMime:ManagedReference
items:
- uid: CSFundamentals.DataStructures.Trees.Binary
  commentId: N:CSFundamentals.DataStructures.Trees.Binary
  id: CSFundamentals.DataStructures.Trees.Binary
  children:
  - CSFundamentals.DataStructures.Trees.Binary.AVLTree`2
  - CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode`2
  - CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
  - CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
  - CSFundamentals.DataStructures.Trees.Binary.RedBlackTree`2
  - CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode`2
  - CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNodeColor
  - CSFundamentals.DataStructures.Trees.Binary.TreeNodeRelationException
  langs:
  - csharp
  - vb
  name: CSFundamentals.DataStructures.Trees.Binary
  nameWithType: CSFundamentals.DataStructures.Trees.Binary
  fullName: CSFundamentals.DataStructures.Trees.Binary
  type: Namespace
  assemblies:
  - CSFundamentals
references:
- uid: CSFundamentals.DataStructures.Trees.Binary.AVLTree`2
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.AVLTree`2
  name: AVLTree<TKey, TValue>
  nameWithType: AVLTree<TKey, TValue>
  fullName: CSFundamentals.DataStructures.Trees.Binary.AVLTree<TKey, TValue>
  nameWithType.vb: AVLTree(Of TKey, TValue)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.AVLTree(Of TKey, TValue)
  name.vb: AVLTree(Of TKey, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.AVLTree`2
    name: AVLTree
    nameWithType: AVLTree
    fullName: CSFundamentals.DataStructures.Trees.Binary.AVLTree
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.AVLTree`2
    name: AVLTree
    nameWithType: AVLTree
    fullName: CSFundamentals.DataStructures.Trees.Binary.AVLTree
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode`2
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode`2
  parent: CSFundamentals.DataStructures.Trees.Binary
  name: AVLTreeNode<TKey, TValue>
  nameWithType: AVLTreeNode<TKey, TValue>
  fullName: CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode<TKey, TValue>
  nameWithType.vb: AVLTreeNode(Of TKey, TValue)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode(Of TKey, TValue)
  name.vb: AVLTreeNode(Of TKey, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode`2
    name: AVLTreeNode
    nameWithType: AVLTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode`2
    name: AVLTreeNode
    nameWithType: AVLTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
  name: BinarySearchTreeBase<TKey, TValue>
  nameWithType: BinarySearchTreeBase<TKey, TValue>
  fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase<TKey, TValue>
  nameWithType.vb: BinarySearchTreeBase(Of TKey, TValue)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase(Of TKey, TValue)
  name.vb: BinarySearchTreeBase(Of TKey, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
    name: BinarySearchTreeBase
    nameWithType: BinarySearchTreeBase
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
    name: BinarySearchTreeBase
    nameWithType: BinarySearchTreeBase
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
  parent: CSFundamentals.DataStructures.Trees.Binary
  name: BinarySearchTreeNode<TKey, TValue>
  nameWithType: BinarySearchTreeNode<TKey, TValue>
  fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode<TKey, TValue>
  nameWithType.vb: BinarySearchTreeNode(Of TKey, TValue)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode(Of TKey, TValue)
  name.vb: BinarySearchTreeNode(Of TKey, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
    name: BinarySearchTreeNode
    nameWithType: BinarySearchTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
    name: BinarySearchTreeNode
    nameWithType: BinarySearchTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.Trees.Binary.RedBlackTree`2
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.RedBlackTree`2
  name: RedBlackTree<TKey, TValue>
  nameWithType: RedBlackTree<TKey, TValue>
  fullName: CSFundamentals.DataStructures.Trees.Binary.RedBlackTree<TKey, TValue>
  nameWithType.vb: RedBlackTree(Of TKey, TValue)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.RedBlackTree(Of TKey, TValue)
  name.vb: RedBlackTree(Of TKey, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.RedBlackTree`2
    name: RedBlackTree
    nameWithType: RedBlackTree
    fullName: CSFundamentals.DataStructures.Trees.Binary.RedBlackTree
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.RedBlackTree`2
    name: RedBlackTree
    nameWithType: RedBlackTree
    fullName: CSFundamentals.DataStructures.Trees.Binary.RedBlackTree
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode`2
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode`2
  parent: CSFundamentals.DataStructures.Trees.Binary
  name: RedBlackTreeNode<TKey, TValue>
  nameWithType: RedBlackTreeNode<TKey, TValue>
  fullName: CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode<TKey, TValue>
  nameWithType.vb: RedBlackTreeNode(Of TKey, TValue)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode(Of TKey, TValue)
  name.vb: RedBlackTreeNode(Of TKey, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode`2
    name: RedBlackTreeNode
    nameWithType: RedBlackTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode`2
    name: RedBlackTreeNode
    nameWithType: RedBlackTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNodeColor
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNodeColor
  parent: CSFundamentals.DataStructures.Trees.Binary
  name: RedBlackTreeNodeColor
  nameWithType: RedBlackTreeNodeColor
  fullName: CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNodeColor
- uid: CSFundamentals.DataStructures.Trees.Binary.TreeNodeRelationException
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.TreeNodeRelationException
  name: TreeNodeRelationException
  nameWithType: TreeNodeRelationException
  fullName: CSFundamentals.DataStructures.Trees.Binary.TreeNodeRelationException
- uid: CSFundamentals.DataStructures.Trees.Binary
  commentId: N:CSFundamentals.DataStructures.Trees.Binary
  name: CSFundamentals.DataStructures.Trees.Binary
  nameWithType: CSFundamentals.DataStructures.Trees.Binary
  fullName: CSFundamentals.DataStructures.Trees.Binary
