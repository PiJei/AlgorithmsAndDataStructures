### YamlMime:ManagedReference
items:
- uid: CSFundamentals.DataStructures.LinkedLists.API
  commentId: N:CSFundamentals.DataStructures.LinkedLists.API
  id: CSFundamentals.DataStructures.LinkedLists.API
  children:
  - CSFundamentals.DataStructures.LinkedLists.API.LinkedListBase`2
  - CSFundamentals.DataStructures.LinkedLists.API.LinkedNode`2
  langs:
  - csharp
  - vb
  name: CSFundamentals.DataStructures.LinkedLists.API
  nameWithType: CSFundamentals.DataStructures.LinkedLists.API
  fullName: CSFundamentals.DataStructures.LinkedLists.API
  type: Namespace
  assemblies:
  - CSFundamentals
references:
- uid: CSFundamentals.DataStructures.LinkedLists.API.LinkedListBase`2
  commentId: T:CSFundamentals.DataStructures.LinkedLists.API.LinkedListBase`2
  name: LinkedListBase<TNode, TValue>
  nameWithType: LinkedListBase<TNode, TValue>
  fullName: CSFundamentals.DataStructures.LinkedLists.API.LinkedListBase<TNode, TValue>
  nameWithType.vb: LinkedListBase(Of TNode, TValue)
  fullName.vb: CSFundamentals.DataStructures.LinkedLists.API.LinkedListBase(Of TNode, TValue)
  name.vb: LinkedListBase(Of TNode, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.LinkedLists.API.LinkedListBase`2
    name: LinkedListBase
    nameWithType: LinkedListBase
    fullName: CSFundamentals.DataStructures.LinkedLists.API.LinkedListBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.LinkedLists.API.LinkedListBase`2
    name: LinkedListBase
    nameWithType: LinkedListBase
    fullName: CSFundamentals.DataStructures.LinkedLists.API.LinkedListBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.LinkedLists.API.LinkedNode`2
  commentId: T:CSFundamentals.DataStructures.LinkedLists.API.LinkedNode`2
  name: LinkedNode<TNode, TValue>
  nameWithType: LinkedNode<TNode, TValue>
  fullName: CSFundamentals.DataStructures.LinkedLists.API.LinkedNode<TNode, TValue>
  nameWithType.vb: LinkedNode(Of TNode, TValue)
  fullName.vb: CSFundamentals.DataStructures.LinkedLists.API.LinkedNode(Of TNode, TValue)
  name.vb: LinkedNode(Of TNode, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.LinkedLists.API.LinkedNode`2
    name: LinkedNode
    nameWithType: LinkedNode
    fullName: CSFundamentals.DataStructures.LinkedLists.API.LinkedNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.LinkedLists.API.LinkedNode`2
    name: LinkedNode
    nameWithType: LinkedNode
    fullName: CSFundamentals.DataStructures.LinkedLists.API.LinkedNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
