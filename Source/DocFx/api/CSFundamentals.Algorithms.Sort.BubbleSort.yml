### YamlMime:ManagedReference
items:
- uid: CSFundamentals.Algorithms.Sort.BubbleSort
  commentId: T:CSFundamentals.Algorithms.Sort.BubbleSort
  id: BubbleSort
  parent: CSFundamentals.Algorithms.Sort
  children:
  - CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative(System.Collections.Generic.List{CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element})
  - CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative``1(System.Collections.Generic.List{``0})
  - CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Recursive(System.Collections.Generic.List{System.Int32})
  langs:
  - csharp
  - vb
  name: BubbleSort
  nameWithType: BubbleSort
  fullName: CSFundamentals.Algorithms.Sort.BubbleSort
  type: Class
  source:
    remote:
      path: Source/Algorithms/Sort/StabilityCheckableVersions/BubbleSort.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: BubbleSort
    path: ../Algorithms/Sort/StabilityCheckableVersions/BubbleSort.cs
    startLine: 25
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Sort
  summary: "\nImplements Bubble sort algorithm. \n"
  example: []
  syntax:
    content: public class BubbleSort
    content.vb: Public Class BubbleSort
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative``1(System.Collections.Generic.List{``0})
  commentId: M:CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative``1(System.Collections.Generic.List{``0})
  id: Sort_Iterative``1(System.Collections.Generic.List{``0})
  parent: CSFundamentals.Algorithms.Sort.BubbleSort
  langs:
  - csharp
  - vb
  name: Sort_Iterative<T>(List<T>)
  nameWithType: BubbleSort.Sort_Iterative<T>(List<T>)
  fullName: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative<T>(System.Collections.Generic.List<T>)
  type: Method
  source:
    remote:
      path: Source/Algorithms/Sort/BubbleSort.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_Iterative
    path: ../Algorithms/Sort/BubbleSort.cs
    startLine: 35
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Sort
  summary: "\nImplements bubble sort iteratively, elements are bubbled down or up the array till they are at their final correct positions. \n"
  example: []
  syntax:
    content: >-
      [Algorithm(AlgorithmType.Sort, "BubbleSort")]

      [SpaceComplexity("O(1)", false, InPlace = true)]

      [TimeComplexity(Case.Best, "O(n)", When = "Input array is already sorted.")]

      [TimeComplexity(Case.Worst, "O(n²)")]

      [TimeComplexity(Case.Average, "O(n²)")]

      public static void Sort_Iterative<T>(List<T> list)
          where T : IComparable<T>
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
      description: Specifies the list of values (of type T, e.g., int) to be sorted.
    typeParameters:
    - id: T
    content.vb: >-
      <Algorithm(AlgorithmType.Sort, "BubbleSort")>

      <SpaceComplexity("O(1)", False, InPlace:=True)>

      <TimeComplexity( Case.Best, "O(n)", When:="Input array is already sorted.")>

      <TimeComplexity( Case.Worst, "O(n²)")>

      <TimeComplexity( Case.Average, "O(n²)")>

      Public Shared Sub Sort_Iterative(Of T As IComparable(Of T))(list As List(Of T))
  overload: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative*
  attributes:
  - type: CSFundamentals.Decoration.AlgorithmAttribute
    ctor: CSFundamentals.Decoration.AlgorithmAttribute.#ctor(CSFundamentals.Decoration.AlgorithmType,System.String)
    arguments:
    - type: CSFundamentals.Decoration.AlgorithmType
      value: 1
    - type: System.String
      value: BubbleSort
  - type: CSFundamentals.Decoration.SpaceComplexityAttribute
    ctor: CSFundamentals.Decoration.SpaceComplexityAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: O(1)
    - type: System.Boolean
      value: false
    namedArguments:
    - name: InPlace
      type: System.Boolean
      value: true
  - type: CSFundamentals.Decoration.TimeComplexityAttribute
    ctor: CSFundamentals.Decoration.TimeComplexityAttribute.#ctor(CSFundamentals.Decoration.Case,System.String)
    arguments:
    - type: CSFundamentals.Decoration.Case
      value: 1
    - type: System.String
      value: O(n)
    namedArguments:
    - name: When
      type: System.String
      value: Input array is already sorted.
  - type: CSFundamentals.Decoration.TimeComplexityAttribute
    ctor: CSFundamentals.Decoration.TimeComplexityAttribute.#ctor(CSFundamentals.Decoration.Case,System.String)
    arguments:
    - type: CSFundamentals.Decoration.Case
      value: 2
    - type: System.String
      value: O(n²)
  - type: CSFundamentals.Decoration.TimeComplexityAttribute
    ctor: CSFundamentals.Decoration.TimeComplexityAttribute.#ctor(CSFundamentals.Decoration.Case,System.String)
    arguments:
    - type: CSFundamentals.Decoration.Case
      value: 0
    - type: System.String
      value: O(n²)
  nameWithType.vb: BubbleSort.Sort_Iterative(Of T)(List(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative(Of T)(System.Collections.Generic.List(Of T))
  name.vb: Sort_Iterative(Of T)(List(Of T))
- uid: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Recursive(System.Collections.Generic.List{System.Int32})
  commentId: M:CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Recursive(System.Collections.Generic.List{System.Int32})
  id: Sort_Recursive(System.Collections.Generic.List{System.Int32})
  parent: CSFundamentals.Algorithms.Sort.BubbleSort
  langs:
  - csharp
  - vb
  name: Sort_Recursive(List<Int32>)
  nameWithType: BubbleSort.Sort_Recursive(List<Int32>)
  fullName: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Recursive(System.Collections.Generic.List<System.Int32>)
  type: Method
  source:
    remote:
      path: Source/Algorithms/Sort/BubbleSort.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_Recursive
    path: ../Algorithms/Sort/BubbleSort.cs
    startLine: 65
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Sort
  summary: "\nIs the recursive version of Bubble sort.\n"
  example: []
  syntax:
    content: public static void Sort_Recursive(List<int> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{System.Int32}
      description: ''
    content.vb: Public Shared Sub Sort_Recursive(list As List(Of Integer))
  overload: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Recursive*
  nameWithType.vb: BubbleSort.Sort_Recursive(List(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Recursive(System.Collections.Generic.List(Of System.Int32))
  name.vb: Sort_Recursive(List(Of Int32))
- uid: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative(System.Collections.Generic.List{CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element})
  commentId: M:CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative(System.Collections.Generic.List{CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element})
  id: Sort_Iterative(System.Collections.Generic.List{CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element})
  parent: CSFundamentals.Algorithms.Sort.BubbleSort
  langs:
  - csharp
  - vb
  name: Sort_Iterative(List<Element>)
  nameWithType: BubbleSort.Sort_Iterative(List<Element>)
  fullName: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative(System.Collections.Generic.List<CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element>)
  type: Method
  source:
    remote:
      path: Source/Algorithms/Sort/StabilityCheckableVersions/BubbleSort.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_Iterative
    path: ../Algorithms/Sort/StabilityCheckableVersions/BubbleSort.cs
    startLine: 31
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Sort
  summary: "\nImplements bubble sort iteratively, elements are bubbled down or up the array till they are at their final correct positions. \n"
  example: []
  syntax:
    content: public static void Sort_Iterative(List<Element> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element}
      description: ''
    content.vb: Public Shared Sub Sort_Iterative(list As List(Of Element))
  overload: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative*
  nameWithType.vb: BubbleSort.Sort_Iterative(List(Of Element))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative(System.Collections.Generic.List(Of CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element))
  name.vb: Sort_Iterative(List(Of Element))
references:
- uid: CSFundamentals.Algorithms.Sort
  commentId: N:CSFundamentals.Algorithms.Sort
  name: CSFundamentals.Algorithms.Sort
  nameWithType: CSFundamentals.Algorithms.Sort
  fullName: CSFundamentals.Algorithms.Sort
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative*
  commentId: Overload:CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative
  name: Sort_Iterative
  nameWithType: BubbleSort.Sort_Iterative
  fullName: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Iterative
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Recursive*
  commentId: Overload:CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Recursive
  name: Sort_Recursive
  nameWithType: BubbleSort.Sort_Recursive
  fullName: CSFundamentals.Algorithms.Sort.BubbleSort.Sort_Recursive
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element}
  commentId: T:System.Collections.Generic.List{CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Element>
  nameWithType: List<Element>
  fullName: System.Collections.Generic.List<CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element>
  nameWithType.vb: List(Of Element)
  fullName.vb: System.Collections.Generic.List(Of CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element)
  name.vb: List(Of Element)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element
    name: Element
    nameWithType: Element
    fullName: CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element
    name: Element
    nameWithType: Element
    fullName: CSFundamentals.Algorithms.Sort.StabilityCheckableVersions.Element
  - name: )
    nameWithType: )
    fullName: )
