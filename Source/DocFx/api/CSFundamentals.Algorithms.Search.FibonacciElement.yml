### YamlMime:ManagedReference
items:
- uid: CSFundamentals.Algorithms.Search.FibonacciElement
  commentId: T:CSFundamentals.Algorithms.Search.FibonacciElement
  id: FibonacciElement
  parent: CSFundamentals.Algorithms.Search
  children:
  - CSFundamentals.Algorithms.Search.FibonacciElement.#ctor(System.Int32,System.Int32)
  - CSFundamentals.Algorithms.Search.FibonacciElement.FibN
  - CSFundamentals.Algorithms.Search.FibonacciElement.FibN1
  - CSFundamentals.Algorithms.Search.FibonacciElement.FibN2
  - CSFundamentals.Algorithms.Search.FibonacciElement.ShiftBackward
  - CSFundamentals.Algorithms.Search.FibonacciElement.ShiftForward
  langs:
  - csharp
  - vb
  name: FibonacciElement
  nameWithType: FibonacciElement
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement
  type: Class
  source:
    remote:
      path: Source/Algorithms/Search/FibonacciSearch.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: FibonacciElement
    path: ../Algorithms/Search/FibonacciSearch.cs
    startLine: 104
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Search
  summary: "\nRepresents a Fibonacci number at index n, and the two Fibonacci numbers at two preceding indexes, which are necessary for calculating this element&apos;s value.  \n"
  example: []
  syntax:
    content: public class FibonacciElement
    content.vb: Public Class FibonacciElement
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.FibN
  commentId: P:CSFundamentals.Algorithms.Search.FibonacciElement.FibN
  id: FibN
  parent: CSFundamentals.Algorithms.Search.FibonacciElement
  langs:
  - csharp
  - vb
  name: FibN
  nameWithType: FibonacciElement.FibN
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.FibN
  type: Property
  source:
    remote:
      path: Source/Algorithms/Search/FibonacciSearch.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: FibN
    path: ../Algorithms/Search/FibonacciSearch.cs
    startLine: 109
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Search
  summary: "\nIs a Fibonacci number: FibN = FibN1 {aka. fib(n-1)} + FibN2 {aka. fib(n-2)} \n"
  example: []
  syntax:
    content: public int FibN { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FibN As Integer
  overload: CSFundamentals.Algorithms.Search.FibonacciElement.FibN*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.FibN1
  commentId: P:CSFundamentals.Algorithms.Search.FibonacciElement.FibN1
  id: FibN1
  parent: CSFundamentals.Algorithms.Search.FibonacciElement
  langs:
  - csharp
  - vb
  name: FibN1
  nameWithType: FibonacciElement.FibN1
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.FibN1
  type: Property
  source:
    remote:
      path: Source/Algorithms/Search/FibonacciSearch.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: FibN1
    path: ../Algorithms/Search/FibonacciSearch.cs
    startLine: 114
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Search
  summary: "\nIs the Fibonacci number immediately before FibN\n"
  example: []
  syntax:
    content: public int FibN1 { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FibN1 As Integer
  overload: CSFundamentals.Algorithms.Search.FibonacciElement.FibN1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.FibN2
  commentId: P:CSFundamentals.Algorithms.Search.FibonacciElement.FibN2
  id: FibN2
  parent: CSFundamentals.Algorithms.Search.FibonacciElement
  langs:
  - csharp
  - vb
  name: FibN2
  nameWithType: FibonacciElement.FibN2
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.FibN2
  type: Property
  source:
    remote:
      path: Source/Algorithms/Search/FibonacciSearch.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: FibN2
    path: ../Algorithms/Search/FibonacciSearch.cs
    startLine: 119
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Search
  summary: "\nIs the Fibonacci number immediately before FibN1\n"
  example: []
  syntax:
    content: public int FibN2 { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FibN2 As Integer
  overload: CSFundamentals.Algorithms.Search.FibonacciElement.FibN2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.#ctor(System.Int32,System.Int32)
  commentId: M:CSFundamentals.Algorithms.Search.FibonacciElement.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: CSFundamentals.Algorithms.Search.FibonacciElement
  langs:
  - csharp
  - vb
  name: FibonacciElement(Int32, Int32)
  nameWithType: FibonacciElement.FibonacciElement(Int32, Int32)
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.FibonacciElement(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Source/Algorithms/Search/FibonacciSearch.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: .ctor
    path: ../Algorithms/Search/FibonacciSearch.cs
    startLine: 126
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Search
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: public FibonacciElement(int fibN2, int fibN1)
    parameters:
    - id: fibN2
      type: System.Int32
      description: 'Second Fibonacci number. '
    - id: fibN1
      type: System.Int32
      description: First Fibonacci number
    content.vb: Public Sub New(fibN2 As Integer, fibN1 As Integer)
  overload: CSFundamentals.Algorithms.Search.FibonacciElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftForward
  commentId: M:CSFundamentals.Algorithms.Search.FibonacciElement.ShiftForward
  id: ShiftForward
  parent: CSFundamentals.Algorithms.Search.FibonacciElement
  langs:
  - csharp
  - vb
  name: ShiftForward()
  nameWithType: FibonacciElement.ShiftForward()
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftForward()
  type: Method
  source:
    remote:
      path: Source/Algorithms/Search/FibonacciSearch.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: ShiftForward
    path: ../Algorithms/Search/FibonacciSearch.cs
    startLine: 136
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Search
  summary: "\nShifts Fibonacci number one element forward in the sequence. \n"
  example: []
  syntax:
    content: public void ShiftForward()
    content.vb: Public Sub ShiftForward
  overload: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftForward*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftBackward
  commentId: M:CSFundamentals.Algorithms.Search.FibonacciElement.ShiftBackward
  id: ShiftBackward
  parent: CSFundamentals.Algorithms.Search.FibonacciElement
  langs:
  - csharp
  - vb
  name: ShiftBackward()
  nameWithType: FibonacciElement.ShiftBackward()
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftBackward()
  type: Method
  source:
    remote:
      path: Source/Algorithms/Search/FibonacciSearch.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: ShiftBackward
    path: ../Algorithms/Search/FibonacciSearch.cs
    startLine: 146
  assemblies:
  - CSFundamentals
  namespace: CSFundamentals.Algorithms.Search
  summary: "\nShifts Fibonacci number one element backward in the sequence. \n"
  example: []
  syntax:
    content: public void ShiftBackward()
    content.vb: Public Sub ShiftBackward
  overload: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftBackward*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CSFundamentals.Algorithms.Search
  commentId: N:CSFundamentals.Algorithms.Search
  name: CSFundamentals.Algorithms.Search
  nameWithType: CSFundamentals.Algorithms.Search
  fullName: CSFundamentals.Algorithms.Search
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.FibN*
  commentId: Overload:CSFundamentals.Algorithms.Search.FibonacciElement.FibN
  name: FibN
  nameWithType: FibonacciElement.FibN
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.FibN
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.FibN1*
  commentId: Overload:CSFundamentals.Algorithms.Search.FibonacciElement.FibN1
  name: FibN1
  nameWithType: FibonacciElement.FibN1
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.FibN1
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.FibN2*
  commentId: Overload:CSFundamentals.Algorithms.Search.FibonacciElement.FibN2
  name: FibN2
  nameWithType: FibonacciElement.FibN2
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.FibN2
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.#ctor*
  commentId: Overload:CSFundamentals.Algorithms.Search.FibonacciElement.#ctor
  name: FibonacciElement
  nameWithType: FibonacciElement.FibonacciElement
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.FibonacciElement
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftForward*
  commentId: Overload:CSFundamentals.Algorithms.Search.FibonacciElement.ShiftForward
  name: ShiftForward
  nameWithType: FibonacciElement.ShiftForward
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftForward
- uid: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftBackward*
  commentId: Overload:CSFundamentals.Algorithms.Search.FibonacciElement.ShiftBackward
  name: ShiftBackward
  nameWithType: FibonacciElement.ShiftBackward
  fullName: CSFundamentals.Algorithms.Search.FibonacciElement.ShiftBackward
