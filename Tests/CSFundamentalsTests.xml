<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CSFundamentalsTests</name>
    </assembly>
    <members>
        <member name="M:CSFundamentalsTests.Algorithms.GraphTraversal.BfsTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.Algorithms.Search.LinearSearchTests._values">
            <summary>
            A random array of integers (not sorted), and containing duplicates
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.Algorithms.Search.SearchTests._values">
            <summary>
            Sorted array of elements. Note that binary search expects a sorted array. 
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.Algorithms.Sort.Constants.ArrayWithDistinctValues">
            <summary>
            Is an array of integers with only distinct values. 
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.Algorithms.Sort.Constants.ArrayWithDuplicateValues">
            <summary>
            Is an array of integers with several duplicate values. 
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.Algorithms.Sort.Constants.ArrayWithSortedDistinctValues">
            <summary>
            Is an array of integers with distinct values, such that the array is already sorted ascending. 
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.Algorithms.Sort.Constants.ArrayWithSortedDuplicateValues">
            <summary>
            Is an array of integers with duplicate values, such that the array is already sorted ascending. 
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.Algorithms.Sort.Constants.ArrayWithReverselySortedDistinctValues">
            <summary>
            Is an array of integers with distinct values, such that the array is reversely sorted, meaning it is descending, whereas sort meant ascending.  
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.Algorithms.Sort.Constants.ArrayWithReverselySortedDuplicateValues">
            <summary>
            Is an array of integers with duplicate values, such that the array is reversely sorted, meaning it is descending, whereas sort meant ascending. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.Algorithms.Sort.UtilsTests.IsSortedAscendingly(System.Collections.Generic.List{System.Int32})">
            <summary>
            Checks whether the given integer list is sorted in ascending order. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.BinaryHeaps.API.BinaryHeapBaseTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.BinaryHeaps.MaxBinaryHeapTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.BinaryHeaps.MinBinaryHeapTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.BinaryHeaps.MinBinaryHeapTests.HasMinOrderProperty``2(CSFundamentals.DataStructures.BinaryHeaps.API.BinaryHeapBase{``0,``1},System.Int32)">
            <summary>
            Checking the MinHeap ordering (node relations) for the node at the given index, to make sure the correct relations between the node and its parent and children holds. 
            </summary>
            <param name="heap"></param>
            <param name="nodeIndex"></param>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty``3(``0)">
            <summary>
            Given the root of a binary search tree, checks whether the binary search tree properties hold.
            </summary>
            <typeparam name="TKey">Specifies the type of the keys in tree. </typeparam>
            <typeparam name="TValue">Specifies the type of the values in tree nodes. </typeparam>
            <param name="root">Is the root of a binary search tree. </param>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinaryTreeNodeTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Binary.API.MockBinaryTreeNode`2">
            <summary>
            This class is only created for testing purposes. 
            TreeNode is an abstract class with generic types, and some method implementations. 
            We need to test those methods without using any child class in production code. 
            Therefore this mock class is created. 
            </summary>
            <typeparam name="TKey">Specifies the type of the keys in a tree.</typeparam>
            <typeparam name="TValue">Specifies type of the values in a tree.</typeparam>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests">
            <summary>
            Tests methods of <see cref="T:CSFundamentals.DataStructures.Trees.Binary.AVLTree`2"/> class. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests._tree" -->
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Build_ExpectsACorrectAVLTree">
            <summary>
            Tests the correctness of Build operation
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Insert_SeveralKeysConsecutively_ExpectsACorrectTreeAfterEachInsertion">
            <summary>
            Tests the correctness of insert operation.
            For a step by step transition of the AVL tree while inserting these keys, see <see cref="!:images\avl-bst-insert-stepByStep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_NonExistingKey_ExpectsNoAlternationToTree">
            <summary>
            Tests deleting a non existing key, and expects the tree to be the same before and after the operation. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_NodeWith2Children_ExpectsLineAndRotateRight">
            <summary>
            Tests delete operation on a node with 2 children, and expects right rotate to be triggered during the operation.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_RootNodeNodeWith2Children_ExpectsReplacementWithSuccessorAndSimpleLeafNodeDeletion">
            <summary>
            Tests deleting the root node which has 2 children. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithMinInSubtreeAndSimpleLeafNodeDeletion">
            <summary>
            Tests deleting a node with 2 children, expects simple deletion of the replacement leaf node.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_NodeWithNoChildren_ExpectsSimpleDeletion">
            <summary>
            Tests deletion of a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_NodeWithNoChildren_ExpectsLineAndRightRotation">
            <summary>
            Tests deletion of a leaf node and expects right rotation to be triggered during the operation. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_NodeWithNoChildren_ExpectsSimpleLeafDeletion">
            <summary>
            Tests deletion of a leaf node
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_NodeWithNoChildrenAndMaxKey_ExpectsSimpleLeafDeletion">
            <summary>
            Tests deletion of the max key in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_NodeWith1Children_ExpectsReplacementWithMinInSubtreeAndSimpleLeafDeletion">
            <summary>
            Tests deletion of the min key in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_NodeWith1Children_ExpectsReplacementWithRightChild">
            <summary>
            Tests deletion of a node with only one right child. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_MultipleKeysConsecutively_ExpectsCorrectTreeAfterEachDeletion_RandomOrder1">
            <summary>
            Deletes all the keys in the tree in a random order in several sequential operations. 
            For a step by step transition of the AVL tree while deleting these keys, see <see cref="!:images\avl-bst-delete-stepBystep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Delete_MultipleKeysConsecutively_ExpectsCorrectTreeAfterEachDeletion_RandomOrder2">
            <summary>
            Deletes all the keys in the tree in a random order in several sequential operations. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.GetHeight_ForSeveralNodesInSampleTree_ExpectsCorrectHeights">
            <summary>
            Tests computing height of the (sub)tree rooted at the chosen nodes.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.GetBalanceFactor_ForSeveralNodesInSampleTree_ExpectsCorrectValues">
            <summary>
            Tests computing balance factor for nodes in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.Balance">
            <summary>
            Tests balance internal method. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.HasAVLTreeProperties``2(CSFundamentals.DataStructures.Trees.Binary.AVLTree{``0,``1},CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode{``0,``1},System.Int32)">
            <summary>
            Checks whether the given tree has AVL tree properties
            </summary>
            <typeparam name="TKey">Type of the keys stored in the tree. </typeparam>
            <typeparam name="TValue">Type of the values stored in the tree. </typeparam>
            <param name="tree">An AVL tree</param>
            <param name="root">Root of the AVL tree</param>
            <param name="expectedNodeCount">Specifies the expected number of tree nodes in the tree. </param>
            <returns>True if the tree has AVL tree properties and false otherwise. </returns>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.AVLTreeTests.HasExpectedBalanceFactor``2(CSFundamentals.DataStructures.Trees.Binary.AVLTree{``0,``1},System.Collections.Generic.List{CSFundamentals.DataStructures.Trees.Binary.AVLTreeNode{``0,``1}})">
            <summary>
            Checks whether all the nodes in the AVL tree have expected balance factors between -1 and 1. 
            </summary>
            <typeparam name="TKey">Type of the keys stored in the tree. </typeparam>
            <typeparam name="TValue">Type of the values stored in the tree. </typeparam>
            <param name="tree">An AVL tree</param>
            <param name="nodes">List of all the nodes in the tree. </param>
            <returns>True if the nodes all have expected balance factors, and false otherwise. </returns>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests">
            <summary>
            Tests methods of <see cref="T:CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2"/> class. 
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests._tree">
            <summary>
            Is a binary search tree (aka. BST). 
            To visualize this tree built as in <see cref="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize"/> method, see <see cref="!:images\bst.png"/> in current directory. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree">
            <summary>
            For a step by step transition of the BST while inserting these keys, see <see cref="!:images\bst-insert-stepBystep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42">
            <summary>
            Tests the correctness of delete operation when deleting the root node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50">
            <summary>
            Tests the correctness of delete operation when deleting a node with 2 children. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithNoChildren">
            <summary>
            Tests the correctness of delete operation when deleting a node with no children. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild">
            <summary>
            Tests the correctness of delete operation when deleting a node with one child. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep">
            <summary>
            Tests the correctness of delete operation when deleting all the keys in the tree one after the other in a random order. 
            For a step by step transition of the BST while deleting these keys, see <see cref="!:images\bst-delete-stepBystep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree">
            <summary>
            Tests the correctness of delete operation when deleting a non existing key from the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin">
            <summary>
            Tests the correctness of delete min key operation
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd">
            <summary>
            Tests the correctness of delete min key operation
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax">
            <summary>
            Tests the correctness of delete max key operation
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd">
            <summary>
            Tests the correctness of delete max key operation
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties(CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase{System.Int32,System.String},CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode{System.Int32,System.String},System.Int32)">
            <summary>
            Checks whether the tree is a proper binary search tree. 
            </summary>
            <param name="tree">A binary search tree. </param>
            <param name="root">The root node of the tree. </param>
            <param name="expectedTotalKeyCount">Expected total number of keys in the tree. </param>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeNodeTests">
            <summary>
            Tests methods in <see cref="T:CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode`2"/> class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeNodeTests.FlipColor">
            <summary>
            Tests the correctness of flipping a node's color. 
            </summary>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests">
            <summary>
            Tests methods of <see cref="T:CSFundamentals.DataStructures.Trees.Binary.RedBlackTree`2"/> class.
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests._tree">
            <summary>
            Is a RedBlack tree (A form of balanced BST). 
            To visualize this tree built as in <see cref="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Initialize"/> method, see <see cref="!:images\redblack-bst.png"/> in current directory. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Build_ExpectsCorrectRedBlackTree">
            <summary>
            Tests the correctness of Build operation
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Insert_SeveralKeysConsecutively_ExpectsACorrectTreeAfterEachInsertion">
            <summary>
            Tests the correctness of insert operation when inserting several keys one after the other. 
            For a step by step transition of the RedBlack tree while inserting these keys, see <see cref="!:images\redblack-bst-insert-stepByStep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Delete_RedNodeWithTWoChildren_ExpectsToBeRepalcedBy50WhichIsBlackWithARedRightChild">
            <summary>
            Tests the correctness of delete operation when deleting a red node with 2 children. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Delete_RedNodeWithTwoChildren_ExpectsToBeReplacedBy35AndIsSubjectToLastCaseBlackSiblingWithLeftRedChild">
            <summary>
            Tests the correctness of delete operation when deleting a red node with 2 children. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Delete_BlackNodeWithOneRedRightChild_ReplaceWithTheRightRedChildWith80AsKeyAndColorItBlack">
            <summary>
            Tests the correctness of delete operation when deleting a black node with one right child. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Delete_BlackNodeWithOneRedLeftChild_RepalceWithLeftRedChildWith10AsKeyAndColorItBlack">
            <summary>
            Tests the correctness of delete operation when deleting a black node with one red left child. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Delete_Root_ExpectsToBeReplacedBy47WhichIsARedLeafAndHasSimpleDeletion">
            <summary>
            Tests the correctness of delete operation when deleting the root of the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Delete_BlackLeafNode_BlackSiblingWithARedLeftChild_ExpectsRightRotate">
            <summary>
            Tests the correctness of delete operation when deleting a black leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Delete_BlackNodeWithLeftRedChild_ReplaceWithLeftChildAs42AndColorItBlack">
            <summary>
            Tests the correctness of delete operation when deleting a black node with a left red child. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Delete_RedLeafNode_ExpectsSimpleDelete">
            <summary>
            Tests the correctness of delete operation when deleting a red leaf node.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.Delete_MultipleKyesConsecutively_ExpectsCorrectTreeAfterEachStep">
            <summary>
            Tests the correctness of delete operation when deleting all the keys in the tree one after the other in a random order. 
            For a step by step transition of the BST while deleting these keys, see <see cref="!:images\redblack-bst-delete-stepBystep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.IsRed_DefaultColor_ExpectsTrue">
            <summary>
            Tests the default color of a RedBlack tree node upon creation.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.IsRed_ColoredBlack_ExpectsFalse">
            <summary>
            Tests whether a black node is red. Expects false. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.IsBlack_DefaultColor_ExpectsFalse">
            <summary>
            Tests whether a node is black upon creation. Expects false. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.IsBlack_ColoredBlack_ExpectsTrue">
            <summary>
            Tests whether a black node is black. Expects true. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.UpdateParentWithNullingChild">
            <summary>
            Tests the correctness of nullifying children of a node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Binary.RedBlackTreeTests.HasRedBlackTreeProperties``2(CSFundamentals.DataStructures.Trees.Binary.RedBlackTree{``0,``1},CSFundamentals.DataStructures.Trees.Binary.RedBlackTreeNode{``0,``1},System.Int32)">
            <summary>
            Checks whether a tree has a RedBlack tree properties. 
            </summary>
            <typeparam name="TKey">Type of the keys stored in a tree. </typeparam>
            <typeparam name="TValue">Type of the values stored in a tree. </typeparam>
            <param name="tree">A RedBlack tree. </param>
            <param name="root">Root of a RedBlack tree. </param>
            <param name="expectedNodeCount">Is the expected number of nodes in a tree. </param>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_4_BTreeNodeTests">
            <summary>
            Tests BTreeNode implementation by a 2-3-4 BTree Node.
            </summary>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests">
            <summary>
            Tests the implementation of B+ Tree with a maximum branching factor of 3. 
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests._tree">
            <summary>
            Is a B+ tree. 
            To visualize this tree built as in <see cref="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Initialize"/> method, see <see cref="!:images\2-3-BPlus-Tree.png"/> in current directory. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Build_ExpectsACorrectBPlusTree">
            <summary>
            Tests the correctness of Build operation
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Insert_SeveralKeys_ExpectsTreeToIncreaseInLevelsAfewTimes">
            <summary>
            Tests the correctness of insert operation.
            For a step by step transition of this 2-3 B + Tree while inserting these keys, see <see cref="!:images\2-3-BPlus-Tree-insert-stepBystep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Search_ForAllExistingKeysInTree_ExpectsSuccess">
            <summary>
            Tests the correctness of search operation by looking for all the existing keys in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Search_NotExistingKey_ThrowsException">
            <summary>
            Tests the correctness of search operation by looking for non existing keys in the tree. Expects exceptions to be thrown.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.FindLeafToInsertKey_NewKeySmallerThanAllKeysInTree_ExpectsTheSparseLeafNodeContainingSmallestKey">
            <summary>
            Tests the correctness of finding a leaf node for inserting a new key. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.FindLeafToInsertKey_NewKeyBiggerThanAllKeysInTree_ExpectsTheSparseLeafNodeContainingBiggestKey">
            <summary>
            Tests the correctness of finding a leaf node for inserting a new key. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.FindLeafToInsertKey_NewKey_ExpectsSuccess">
            <summary>
            Tests the correctness of finding a leaf node for inserting a new key. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.FindLeafToInsertKey_DuplicateKey_ThrowsException">
            <summary>
            Tests the correctness of finding a leaf node for inserting a duplicate key. Expects an exception to be thrown.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheBiggestKeyInLeftSubTree_ExpectsRightRotateAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting max key in the left subtree of the root. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheBiggestKeyInLeftSubTreeOfTheLeftSubtreeOfRoot_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_AKeyFromFullLeaf_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting a key from a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheBiggestKeyInLeftMostLeafOnLeftSubtree_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheBiggestKeyInAFullLeafNodeOfLeftSubtree_ExpectsSimpleDeleteToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting max key from a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheOnlyKeyInLeaf_ExpectsLeftRotationAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheBiggestKeyInFullLeaf_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting max key in a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheSmallestKeyInFullLeaf_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting min key in a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheSmallestKeyInAFullLeafNode_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting min key in a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheSmallestKeyInAFullLeaf_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting min key in a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheSmallestKeyInFullLeafWith2Siblings_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting a key from a full leaf node with 2 siblings. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheBiggestKeyInFullLeafNode_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting max key in a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_SmallestKeyInAFullLeaf_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting min key in a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheOnlyKeyInLeafNode_ExpectsLeftRotationAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheSmallestKeyInAFullLeafNodeOfRightSubtree_ExpectsSimpleDeleteAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the min key in a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheOnlyKeyInLeafNode_ExpectsRightRotationAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_AllNodesInRandomOrder1_ExpectsProperBtreeAfterEachDelete">
            <summary>
            Tests the correctness of delete operation by deleting all the keys in the tree one after the other in a random order. 
            For a step by step transition of this 2-3 B + Tree while deleting these keys, see <see cref="!:images\2-3-BPlus-Tree-delete-stepBystep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_AllNodesInRandomOrder2_ExpectsProperBtreeAfterEachDelete">
            <summary>
            Tests the correctness of delete operation by deleting all the keys in the tree one after the other in a random order. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheOnlyKeyInTree_ExpectsNoNodeAndNoKeyAfter">
            <summary>
            Tests the correctness of delete operation when there is only one key-value pair in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_BiggestKeyInTheOnlyLeafNodeOfTree_ExpectsToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when there is only one full node in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_NonExistingKey_ExpectsFailure">
            <summary>
            Tests the correctness of delete operation when deleting a non existing key in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheKeyInFullLeafNode_ExpectsSimpleDeleteAndReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting a key from a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheOnlyKeyInLeafNode_ExpectsToTriggerLeftRotateAndReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_KeyInFullLeaf_ExpectsToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting a key from a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BPlusTreeTests.Delete_TheOnlyKeyInLeafNodeWithMinOneFullSibling_ExpectsToTriggerLeftRotate">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node with a minOneFull sibling.
            </summary>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeNodeTests">
            <summary>
            Tests BTreeNode implementation by a 2-3 BTree Node.
            </summary>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests">
            <summary>
            Tests BTree implementation by a 2-3 B-Tree, where minimum number of children for a non-root tree is 2, and maximum number of children for any node is 3. 
            </summary>
        </member>
        <member name="F:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests._tree">
            <summary>
            Is a B tree. 
            To visualize this tree built as in <see cref="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Initialize"/> method, see <see cref="!:Images\2-3-BTree.png"/> in current directory. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Initialize">
            <summary>
            Initializes/Resets variables before executing each unit test in this class. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Build_ExpectsACorrectBTree">
            <summary>
            Tests the correctness of Build operation
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.GetMaxCapacity_ForATreeWithOneToFiveLevels_ExpectsNumbersAsIndicatedInAsserts">
            <summary>
            Tests the correctness of computing maximum capacity of a B tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.FindLeafToInsertKey_NewKeySmallerThanAllKeysInTree_ExpectsTheSparseLeafNodeContainingSmallestKey">
            <summary>
            Tests the correctness of finding a leaf node to insert a key that is smaller than the current minimum key in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.FindLeafToInsertKey_NewKeyBiggerThanAllKeysInTree_ExpectsTheSparseLeafNodeContainingBiggestKey">
            <summary>
            Tests the correctness of finding a leaf node to insert a key that is bigger than the current maximum key in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.FindLeafToInsertKey_NewKey_ExpectsSuccess">
            <summary>
            Tests the correctness of finding a leaf node to insert a key. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.FindLeafToInsertKey_DuplicateKey_ThrowsException">
            <summary>
            Tests the correctness of finding a leaf node  to insert a duplicate key. Expects exception. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Insert_SeveralKeys_ExpectsTreeToIncreaseInLevelsAfewTimes">
            <summary>
            Tests the correctness of insert operation by inserting several keys one after the other. 
            For a step by step transition of this 2-3 BTree while inserting these keys, see <see cref="!:images\2-3-BTree-insert-stepBystep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.InOrderTraversal_StartingFromRoot_ExpectsAscendingOrder">
            <summary>
            Tests the correctness of in-order traversal over the tree. Expects a sorted list of key-value pairs. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Search_ForAllExistingKeysInTree_ExpectsSuccess">
            <summary>
            Tests the correctness of search operation by looking for all the existing keys in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Search_NotExistingKey_ThrowsException">
            <summary>
            Tests the correctness of search operation by looking for a non existing key in the tree. Expects an exception to be thrown. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_Root_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the root node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyOfLeftChildOfRoot_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in an internal node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyOfRightChildOfRoot_ExpectsToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in an internal node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInParentNodeOfLeftMostLeavesOnLeftSubtree_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in an internal node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInParentNodeOfRightMostLeavesOnLeftSubtree_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in an internal node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInParentNodeOfLeftMostLeavesOnRightSubtree_ExpectsToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in an internal node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInParentNodeOfRightMostLeavesOnRightSubtree_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in an internal node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheSmallestKeyInTreeLeafNode_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node/also the min key in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_ThirdSmallestKeyInTreeLeafNode_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_SmallestKeyInRightSubtreeOfLeftSubtreeLeafNode_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_BiggestKeyInLeftSubtreeLeafNode_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_SmallestKeyInRightSubtreeLeafNode_ExpectsToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_SmallestKeyInAFullLeaf_ExpectsToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the min key in a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_BiggestKeyInAFullLeaf_ExpectsToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the max key in a full leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_ThirdBiggestKeyInTreeLeafNode_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_BiggestKeyInTreeLeafNode_ExpectsToReduceBy4NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_AllNodesInRandomOrder1_ExpectsProperBtreeAfterEachDelete">
            <summary>
            Tests the correctness of delete operation when deleting all the keys in the tree one after the other in a random order.
            For a step by step transition of this 2-3 BTree while deleting these keys, see <see cref="!:images\2-3-BTree-delete-stepBystep.png"/>.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_AllNodesInRandomOrder2_ExpectsProperBtreeAfterEachDelete">
            <summary>
            Tests the correctness of delete operation when deleting all the keys in the tree one after the other in a random order.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInTree_ExpectsNoNodeAndNoKeyAfter">
            <summary>
            Tests the correctness of delete operation when deleting the only key in the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_BiggestKeyInTheOnlyNodeOfTree_ExpectsToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the max key in the only node of the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_NonExistingKey_ExpectsFailure">
            <summary>
            Tests the correctness of delete operation when deleting a non existing key from the tree. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInInternalNode_ExpectsToTriggerJoinAndReduceBy2NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in an internal node.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInLeafNode_ExpectsToTriggerJoinByRightSiblingAndReduceBy2NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInLeafNode_ExpectsToTriggerJoinByLeftSiblingAndReduceBy2NodesAnd1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_KeyInFullLeaf_ExpectsToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting a key in a full a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInLeafNodeWithMinOneFullSibling_ExpectsToTriggerLeftRotate">
            <summary>
            Tests the correctness of delete operation when deleting a key in a full a leaf node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_DeleteTheOnlyKeyInInternalNode_ExpectsToTriggerLeafDeleteAndLeftRotate">
            <summary>
            Tests the correctness of delete operation when deleting the only key in an internal node. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInLeafWithFullParentAndMinOneFullSibling_ExpectsLeftRotateAndToReduceBy1Key">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node with a minOneFull sibling.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.Delete_TheOnlyKeyInLeaf_ExpectsToTriggerJoinAndLeftRotateOnANodeWithChildren">
            <summary>
            Tests the correctness of delete operation when deleting the only key in a leaf node.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.RotateLeft_EmptyNodeWithMinOneFullSibling_ExpectsChildrenToBeRotated">
            <summary>
            Tests the correctness of left rotation. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.RotateRight_EmptyNodeWithMinOneFullLeftSibling_ExpectsChildrenToBeRotated">
            <summary>
            Tests the correctness of right rotation. 
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary._2_3_BTreeTests.GetMaxNode_OnAllSubTreesInTree_ExpectsCorrectValuesForMaxKeyInSubtree">
            <summary>
            Tests the correctness of finding the node with the max key in the (sub)tree rooted at several different nodes. 
            </summary>
        </member>
        <member name="T:CSFundamentalsTests.DataStructures.Trees.Nary._3_5_BTreeNodeTests">
            <summary>
            Tests BTreeNode implementation by a 3-5 BTree Node.
            </summary>
        </member>
        <member name="M:CSFundamentalsTests.DataStructures.Trees.Nary.BTreeTestsUtils.DFS``3(``0,System.Collections.Generic.List{``0})">
            <summary>
            TODO: How to make this to use the DFS I have in the algorithms? 
            </summary>
        </member>
    </members>
</doc>
