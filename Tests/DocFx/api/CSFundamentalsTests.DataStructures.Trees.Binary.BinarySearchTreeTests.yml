### YamlMime:ManagedReference
items:
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  commentId: T:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  id: BinarySearchTreeTests
  parent: CSFundamentalsTests.DataStructures.Trees.Binary
  children:
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithNoChildren
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties(CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase{System.Int32,System.String},CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode{System.Int32,System.String},System.Int32)
  - CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize
  langs:
  - csharp
  - vb
  name: BinarySearchTreeTests
  nameWithType: BinarySearchTreeTests
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  type: Class
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: BinarySearchTreeTests
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 30
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests methods of <xref href=\"CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase%602\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: >-
      [TestClass]

      public class BinarySearchTreeTests
    content.vb: >-
      <TestClass>

      Public Class BinarySearchTreeTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize
  id: Initialize
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: BinarySearchTreeTests.Initialize()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Initialize
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 44
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nInitializes/Resets variables before executing each unit test in this class. \n"
  example: []
  syntax:
    content: >-
      [TestInitialize]

      public void Initialize()
    content.vb: >-
      <TestInitialize>

      Public Sub Initialize
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree
  id: Build_ExpectsCorrectBinaryTree
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: Build_ExpectsCorrectBinaryTree()
  nameWithType: BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Build_ExpectsCorrectBinaryTree
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 54
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nFor a step by step transition of the BST while inserting these keys, see &quot;images\\bst-insert-stepBystep.png&quot;.\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Build_ExpectsCorrectBinaryTree()
    content.vb: >-
      <TestMethod>

      Public Sub Build_ExpectsCorrectBinaryTree
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
  id: Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: Delete_Root_ExpectsReplacementByImmediateSuccessorKey42()
  nameWithType: BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 63
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete operation when deleting the root node. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Delete_Root_ExpectsReplacementByImmediateSuccessorKey42()
    content.vb: >-
      <TestMethod>

      Public Sub Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
  id: Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50()
  nameWithType: BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 75
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete operation when deleting a node with 2 children. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50()
    content.vb: >-
      <TestMethod>

      Public Sub Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithNoChildren
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithNoChildren
  id: Delete_NodeWithNoChildren
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: Delete_NodeWithNoChildren()
  nameWithType: BinarySearchTreeTests.Delete_NodeWithNoChildren()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithNoChildren()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Delete_NodeWithNoChildren
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 86
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete operation when deleting a node with no children. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Delete_NodeWithNoChildren()
    content.vb: >-
      <TestMethod>

      Public Sub Delete_NodeWithNoChildren
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithNoChildren*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
  id: Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild()
  nameWithType: BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 96
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete operation when deleting a node with one child. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild()
    content.vb: >-
      <TestMethod>

      Public Sub Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
  id: Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep()
  nameWithType: BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 107
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete operation when deleting all the keys in the tree one after the other in a random order. \nFor a step by step transition of the BST while deleting these keys, see &quot;images\\bst-delete-stepBystep.png&quot;.\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep()
    content.vb: >-
      <TestMethod>

      Public Sub Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree
  id: Delete_NotExistingKey_ExpectsNoAlternationInTree
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: Delete_NotExistingKey_ExpectsNoAlternationInTree()
  nameWithType: BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Delete_NotExistingKey_ExpectsNoAlternationInTree
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 146
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete operation when deleting a non existing key from the tree. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Delete_NotExistingKey_ExpectsNoAlternationInTree()
    content.vb: >-
      <TestMethod>

      Public Sub Delete_NotExistingKey_ExpectsNoAlternationInTree
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
  id: DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin()
  nameWithType: BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 159
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete min key operation\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin()
    content.vb: >-
      <TestMethod>

      Public Sub DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
  id: DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd()
  nameWithType: BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 171
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete min key operation\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd()
    content.vb: >-
      <TestMethod>

      Public Sub DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
  id: DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax()
  nameWithType: BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 183
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete max key operation\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax()
    content.vb: >-
      <TestMethod>

      Public Sub DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
  id: DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd()
  nameWithType: BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 195
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nTests the correctness of delete max key operation\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd()
    content.vb: >-
      <TestMethod>

      Public Sub DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties(CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase{System.Int32,System.String},CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode{System.Int32,System.String},System.Int32)
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties(CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase{System.Int32,System.String},CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode{System.Int32,System.String},System.Int32)
  id: HasBinarySearchTreeProperties(CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase{System.Int32,System.String},CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode{System.Int32,System.String},System.Int32)
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests
  langs:
  - csharp
  - vb
  name: HasBinarySearchTreeProperties(BinarySearchTreeBase<Int32, String>, BinarySearchTreeNode<Int32, String>, Int32)
  nameWithType: BinarySearchTreeTests.HasBinarySearchTreeProperties(BinarySearchTreeBase<Int32, String>, BinarySearchTreeNode<Int32, String>, Int32)
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties(CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase<System.Int32, System.String>, CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode<System.Int32, System.String>, System.Int32)
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/BinarySearchTreeTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: HasBinarySearchTreeProperties
    path: ../DataStructures/Trees/Binary/BinarySearchTreeTests.cs
    startLine: 210
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary
  summary: "\nChecks whether the tree is a proper binary search tree. \n"
  example: []
  syntax:
    content: public void HasBinarySearchTreeProperties(BinarySearchTreeBase<int, string> tree, BinarySearchTreeNode<int, string> root, int expectedTotalKeyCount)
    parameters:
    - id: tree
      type: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase{System.Int32,System.String}
      description: 'A binary search tree. '
    - id: root
      type: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode{System.Int32,System.String}
      description: 'The root node of the tree. '
    - id: expectedTotalKeyCount
      type: System.Int32
      description: 'Expected total number of keys in the tree. '
    content.vb: Public Sub HasBinarySearchTreeProperties(tree As BinarySearchTreeBase(Of Integer, String), root As BinarySearchTreeNode(Of Integer, String), expectedTotalKeyCount As Integer)
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties*
  nameWithType.vb: BinarySearchTreeTests.HasBinarySearchTreeProperties(BinarySearchTreeBase(Of Int32, String), BinarySearchTreeNode(Of Int32, String), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties(CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase(Of System.Int32, System.String), CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode(Of System.Int32, System.String), System.Int32)
  name.vb: HasBinarySearchTreeProperties(BinarySearchTreeBase(Of Int32, String), BinarySearchTreeNode(Of Int32, String), Int32)
references:
- uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
  name: BinarySearchTreeBase<TKey, TValue>
  nameWithType: BinarySearchTreeBase<TKey, TValue>
  fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase<TKey, TValue>
  nameWithType.vb: BinarySearchTreeBase(Of TKey, TValue)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase(Of TKey, TValue)
  name.vb: BinarySearchTreeBase(Of TKey, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
    name: BinarySearchTreeBase
    nameWithType: BinarySearchTreeBase
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
    name: BinarySearchTreeBase
    nameWithType: BinarySearchTreeBase
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentalsTests.DataStructures.Trees.Binary
  commentId: N:CSFundamentalsTests.DataStructures.Trees.Binary
  name: CSFundamentalsTests.DataStructures.Trees.Binary
  nameWithType: CSFundamentalsTests.DataStructures.Trees.Binary
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize
  name: Initialize
  nameWithType: BinarySearchTreeTests.Initialize
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Initialize
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree
  name: Build_ExpectsCorrectBinaryTree
  nameWithType: BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Build_ExpectsCorrectBinaryTree
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
  name: Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
  nameWithType: BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_Root_ExpectsReplacementByImmediateSuccessorKey42
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
  name: Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
  nameWithType: BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWith2Children_ExpectsReplacementWithImmediateSuccessorKey50
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithNoChildren*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithNoChildren
  name: Delete_NodeWithNoChildren
  nameWithType: BinarySearchTreeTests.Delete_NodeWithNoChildren
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithNoChildren
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
  name: Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
  nameWithType: BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NodeWithOneChildren_ExpectsReplacementByLeftChild
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
  name: Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
  nameWithType: BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_MultipleNodesConsecutively_ExpectsCorrectBinarySearchTreeAfterEachStep
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree
  name: Delete_NotExistingKey_ExpectsNoAlternationInTree
  nameWithType: BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.Delete_NotExistingKey_ExpectsNoAlternationInTree
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
  name: DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
  nameWithType: BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InEntireTree_ExpectsToDelete10AndHave20AsNewMin
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
  name: DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
  nameWithType: BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMin_InRightSubtreeOfRoot_ExpectsToDelete42AndHave45AsMinAtTheEnd
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
  name: DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
  nameWithType: BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InEntireTree_ExpectsToDelete80AndHave50AsNewMax
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
  name: DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
  nameWithType: BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.DeleteMax_InLeftSubtreeOfRoot_ExpectsToDelete35AndHave30AsMinAtTheEnd
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties
  name: HasBinarySearchTreeProperties
  nameWithType: BinarySearchTreeTests.HasBinarySearchTreeProperties
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.BinarySearchTreeTests.HasBinarySearchTreeProperties
- uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase{System.Int32,System.String}
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase{System.Int32,System.String}
  parent: CSFundamentals.DataStructures.Trees.Binary
  definition: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
  name: BinarySearchTreeBase<Int32, String>
  nameWithType: BinarySearchTreeBase<Int32, String>
  fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase<System.Int32, System.String>
  nameWithType.vb: BinarySearchTreeBase(Of Int32, String)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase(Of System.Int32, System.String)
  name.vb: BinarySearchTreeBase(Of Int32, String)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
    name: BinarySearchTreeBase
    nameWithType: BinarySearchTreeBase
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase`2
    name: BinarySearchTreeBase
    nameWithType: BinarySearchTreeBase
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode{System.Int32,System.String}
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode{System.Int32,System.String}
  parent: CSFundamentals.DataStructures.Trees.Binary
  definition: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
  name: BinarySearchTreeNode<Int32, String>
  nameWithType: BinarySearchTreeNode<Int32, String>
  fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode<System.Int32, System.String>
  nameWithType.vb: BinarySearchTreeNode(Of Int32, String)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode(Of System.Int32, System.String)
  name.vb: BinarySearchTreeNode(Of Int32, String)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
    name: BinarySearchTreeNode
    nameWithType: BinarySearchTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
    name: BinarySearchTreeNode
    nameWithType: BinarySearchTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CSFundamentals.DataStructures.Trees.Binary
  commentId: N:CSFundamentals.DataStructures.Trees.Binary
  name: CSFundamentals.DataStructures.Trees.Binary
  nameWithType: CSFundamentals.DataStructures.Trees.Binary
  fullName: CSFundamentals.DataStructures.Trees.Binary
- uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
  name: BinarySearchTreeNode<TKey, TValue>
  nameWithType: BinarySearchTreeNode<TKey, TValue>
  fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode<TKey, TValue>
  nameWithType.vb: BinarySearchTreeNode(Of TKey, TValue)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode(Of TKey, TValue)
  name.vb: BinarySearchTreeNode(Of TKey, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
    name: BinarySearchTreeNode
    nameWithType: BinarySearchTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode`2
    name: BinarySearchTreeNode
    nameWithType: BinarySearchTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.BinarySearchTreeNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
