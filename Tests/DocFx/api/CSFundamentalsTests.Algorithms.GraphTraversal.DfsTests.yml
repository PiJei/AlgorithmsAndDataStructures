### YamlMime:ManagedReference
items:
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests
  commentId: T:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests
  id: DfsTests
  parent: CSFundamentalsTests.Algorithms.GraphTraversal
  children:
  - CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Initialize
  - CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromA
  - CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromE
  - CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromA
  - CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromE
  langs:
  - csharp
  - vb
  name: DfsTests
  nameWithType: DfsTests
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests
  type: Class
  source:
    remote:
      path: Tests/Algorithms/GraphTraversal/DfsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: DfsTests
    path: ../Algorithms/GraphTraversal/DfsTests.cs
    startLine: 29
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.GraphTraversal
  summary: "\nTests methods in <xref href=\"CSFundamentals.Algorithms.GraphTraversal.DFS\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: >-
      [TestClass]

      public class DfsTests
    content.vb: >-
      <TestClass>

      Public Class DfsTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Initialize
  commentId: M:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Initialize
  id: Initialize
  parent: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: DfsTests.Initialize()
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Initialize()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/GraphTraversal/DfsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Initialize
    path: ../Algorithms/GraphTraversal/DfsTests.cs
    startLine: 43
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.GraphTraversal
  summary: "\nInitializes/Resets variables before executing each unit test in this class. \n"
  example: []
  syntax:
    content: >-
      [TestInitialize]

      public void Initialize()
    content.vb: >-
      <TestInitialize>

      Public Sub Initialize
  overload: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Initialize*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromA
  commentId: M:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromA
  id: Iterative_StartFromA
  parent: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests
  langs:
  - csharp
  - vb
  name: Iterative_StartFromA()
  nameWithType: DfsTests.Iterative_StartFromA()
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromA()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/GraphTraversal/DfsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Iterative_StartFromA
    path: ../Algorithms/GraphTraversal/DfsTests.cs
    startLine: 69
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.GraphTraversal
  summary: "\nTests the correctness of BFS iterative version, when starting from node <xref href=\"CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.A\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Iterative_StartFromA()
    content.vb: >-
      <TestMethod>

      Public Sub Iterative_StartFromA
  overload: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromA*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromE
  commentId: M:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromE
  id: Iterative_StartFromE
  parent: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests
  langs:
  - csharp
  - vb
  name: Iterative_StartFromE()
  nameWithType: DfsTests.Iterative_StartFromE()
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromE()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/GraphTraversal/DfsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Iterative_StartFromE
    path: ../Algorithms/GraphTraversal/DfsTests.cs
    startLine: 87
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.GraphTraversal
  summary: "\nTests the correctness of BFS iterative version, when starting from node <xref href=\"CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.E\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Iterative_StartFromE()
    content.vb: >-
      <TestMethod>

      Public Sub Iterative_StartFromE
  overload: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromE*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromA
  commentId: M:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromA
  id: Recursive_StartFromA
  parent: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests
  langs:
  - csharp
  - vb
  name: Recursive_StartFromA()
  nameWithType: DfsTests.Recursive_StartFromA()
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromA()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/GraphTraversal/DfsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Recursive_StartFromA
    path: ../Algorithms/GraphTraversal/DfsTests.cs
    startLine: 105
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.GraphTraversal
  summary: "\nTests the correctness of BFS recursive version, when starting from node <xref href=\"CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.A\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Recursive_StartFromA()
    content.vb: >-
      <TestMethod>

      Public Sub Recursive_StartFromA
  overload: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromA*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromE
  commentId: M:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromE
  id: Recursive_StartFromE
  parent: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests
  langs:
  - csharp
  - vb
  name: Recursive_StartFromE()
  nameWithType: DfsTests.Recursive_StartFromE()
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromE()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/GraphTraversal/DfsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Recursive_StartFromE
    path: ../Algorithms/GraphTraversal/DfsTests.cs
    startLine: 125
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.GraphTraversal
  summary: "\nTests the correctness of BFS recursive version, when starting from node <xref href=\"CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.E\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Recursive_StartFromE()
    content.vb: >-
      <TestMethod>

      Public Sub Recursive_StartFromE
  overload: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromE*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CSFundamentals.Algorithms.GraphTraversal.DFS
  commentId: T:CSFundamentals.Algorithms.GraphTraversal.DFS
  isExternal: true
- uid: CSFundamentalsTests.Algorithms.GraphTraversal
  commentId: N:CSFundamentalsTests.Algorithms.GraphTraversal
  name: CSFundamentalsTests.Algorithms.GraphTraversal
  nameWithType: CSFundamentalsTests.Algorithms.GraphTraversal
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Initialize*
  commentId: Overload:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Initialize
  name: Initialize
  nameWithType: DfsTests.Initialize
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Initialize
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.A
  commentId: F:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.A
  isExternal: true
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromA*
  commentId: Overload:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromA
  name: Iterative_StartFromA
  nameWithType: DfsTests.Iterative_StartFromA
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromA
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.E
  commentId: F:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.E
  isExternal: true
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromE*
  commentId: Overload:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromE
  name: Iterative_StartFromE
  nameWithType: DfsTests.Iterative_StartFromE
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Iterative_StartFromE
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromA*
  commentId: Overload:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromA
  name: Recursive_StartFromA
  nameWithType: DfsTests.Recursive_StartFromA
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromA
- uid: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromE*
  commentId: Overload:CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromE
  name: Recursive_StartFromE
  nameWithType: DfsTests.Recursive_StartFromE
  fullName: CSFundamentalsTests.Algorithms.GraphTraversal.DfsTests.Recursive_StartFromE
