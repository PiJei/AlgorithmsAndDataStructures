### YamlMime:ManagedReference
items:
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests
  commentId: T:CSFundamentalsTests.Algorithms.Sort.HeapSortTests
  id: HeapSortTests
  parent: CSFundamentalsTests.Algorithms.Sort
  children:
  - CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDistinctValues
  - CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDuplicateValues
  - CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithRevereselySortedDuplicateValues
  - CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithReverselySortedDistinctValues
  - CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDistinctValues
  - CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDuplicateValues
  langs:
  - csharp
  - vb
  name: HeapSortTests
  nameWithType: HeapSortTests
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests
  type: Class
  source:
    remote:
      path: Tests/Algorithms/Sort/HeapSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: HeapSortTests
    path: ../Algorithms/Sort/HeapSortTests.cs
    startLine: 29
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests methods in <xref href=\"CSFundamentals.Algorithms.Sort.HeapSort\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: >-
      [TestClass]

      public class HeapSortTests
    content.vb: >-
      <TestClass>

      Public Class HeapSortTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDistinctValues
  commentId: M:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDistinctValues
  id: Sort_WithDistinctValues
  parent: CSFundamentalsTests.Algorithms.Sort.HeapSortTests
  langs:
  - csharp
  - vb
  name: Sort_WithDistinctValues()
  nameWithType: HeapSortTests.Sort_WithDistinctValues()
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDistinctValues()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Sort/HeapSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_WithDistinctValues
    path: ../Algorithms/Sort/HeapSortTests.cs
    startLine: 35
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests the correctness of Heap sort algorithm over an array with distinct values.  \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Sort_WithDistinctValues()
    content.vb: >-
      <TestMethod>

      Public Sub Sort_WithDistinctValues
  overload: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDistinctValues*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDuplicateValues
  commentId: M:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDuplicateValues
  id: Sort_WithDuplicateValues
  parent: CSFundamentalsTests.Algorithms.Sort.HeapSortTests
  langs:
  - csharp
  - vb
  name: Sort_WithDuplicateValues()
  nameWithType: HeapSortTests.Sort_WithDuplicateValues()
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDuplicateValues()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Sort/HeapSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_WithDuplicateValues
    path: ../Algorithms/Sort/HeapSortTests.cs
    startLine: 48
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests the correctness of Heap sort algorithm over an array with duplicate values. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Sort_WithDuplicateValues()
    content.vb: >-
      <TestMethod>

      Public Sub Sort_WithDuplicateValues
  overload: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDuplicateValues*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDistinctValues
  commentId: M:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDistinctValues
  id: Sort_WithSortedDistinctValues
  parent: CSFundamentalsTests.Algorithms.Sort.HeapSortTests
  langs:
  - csharp
  - vb
  name: Sort_WithSortedDistinctValues()
  nameWithType: HeapSortTests.Sort_WithSortedDistinctValues()
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDistinctValues()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Sort/HeapSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_WithSortedDistinctValues
    path: ../Algorithms/Sort/HeapSortTests.cs
    startLine: 59
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests the correctness of Heap sort algorithm over a sorted array with distinct values. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Sort_WithSortedDistinctValues()
    content.vb: >-
      <TestMethod>

      Public Sub Sort_WithSortedDistinctValues
  overload: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDistinctValues*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDuplicateValues
  commentId: M:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDuplicateValues
  id: Sort_WithSortedDuplicateValues
  parent: CSFundamentalsTests.Algorithms.Sort.HeapSortTests
  langs:
  - csharp
  - vb
  name: Sort_WithSortedDuplicateValues()
  nameWithType: HeapSortTests.Sort_WithSortedDuplicateValues()
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDuplicateValues()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Sort/HeapSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_WithSortedDuplicateValues
    path: ../Algorithms/Sort/HeapSortTests.cs
    startLine: 70
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests the correctness of Heap sort algorithm over a sorted array with duplicate values. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Sort_WithSortedDuplicateValues()
    content.vb: >-
      <TestMethod>

      Public Sub Sort_WithSortedDuplicateValues
  overload: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDuplicateValues*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithReverselySortedDistinctValues
  commentId: M:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithReverselySortedDistinctValues
  id: Sort_WithReverselySortedDistinctValues
  parent: CSFundamentalsTests.Algorithms.Sort.HeapSortTests
  langs:
  - csharp
  - vb
  name: Sort_WithReverselySortedDistinctValues()
  nameWithType: HeapSortTests.Sort_WithReverselySortedDistinctValues()
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithReverselySortedDistinctValues()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Sort/HeapSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_WithReverselySortedDistinctValues
    path: ../Algorithms/Sort/HeapSortTests.cs
    startLine: 81
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests the correctness of Heap sort algorithm over a reversely sorted array with distinct values. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Sort_WithReverselySortedDistinctValues()
    content.vb: >-
      <TestMethod>

      Public Sub Sort_WithReverselySortedDistinctValues
  overload: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithReverselySortedDistinctValues*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithRevereselySortedDuplicateValues
  commentId: M:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithRevereselySortedDuplicateValues
  id: Sort_WithRevereselySortedDuplicateValues
  parent: CSFundamentalsTests.Algorithms.Sort.HeapSortTests
  langs:
  - csharp
  - vb
  name: Sort_WithRevereselySortedDuplicateValues()
  nameWithType: HeapSortTests.Sort_WithRevereselySortedDuplicateValues()
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithRevereselySortedDuplicateValues()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Sort/HeapSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_WithRevereselySortedDuplicateValues
    path: ../Algorithms/Sort/HeapSortTests.cs
    startLine: 92
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests the correctness of Heap sort algorithm over a reversely sorted array with duplicate values. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Sort_WithRevereselySortedDuplicateValues()
    content.vb: >-
      <TestMethod>

      Public Sub Sort_WithRevereselySortedDuplicateValues
  overload: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithRevereselySortedDuplicateValues*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CSFundamentals.Algorithms.Sort.HeapSort
  commentId: T:CSFundamentals.Algorithms.Sort.HeapSort
  isExternal: true
- uid: CSFundamentalsTests.Algorithms.Sort
  commentId: N:CSFundamentalsTests.Algorithms.Sort
  name: CSFundamentalsTests.Algorithms.Sort
  nameWithType: CSFundamentalsTests.Algorithms.Sort
  fullName: CSFundamentalsTests.Algorithms.Sort
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDistinctValues*
  commentId: Overload:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDistinctValues
  name: Sort_WithDistinctValues
  nameWithType: HeapSortTests.Sort_WithDistinctValues
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDistinctValues
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDuplicateValues*
  commentId: Overload:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDuplicateValues
  name: Sort_WithDuplicateValues
  nameWithType: HeapSortTests.Sort_WithDuplicateValues
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithDuplicateValues
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDistinctValues*
  commentId: Overload:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDistinctValues
  name: Sort_WithSortedDistinctValues
  nameWithType: HeapSortTests.Sort_WithSortedDistinctValues
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDistinctValues
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDuplicateValues*
  commentId: Overload:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDuplicateValues
  name: Sort_WithSortedDuplicateValues
  nameWithType: HeapSortTests.Sort_WithSortedDuplicateValues
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithSortedDuplicateValues
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithReverselySortedDistinctValues*
  commentId: Overload:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithReverselySortedDistinctValues
  name: Sort_WithReverselySortedDistinctValues
  nameWithType: HeapSortTests.Sort_WithReverselySortedDistinctValues
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithReverselySortedDistinctValues
- uid: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithRevereselySortedDuplicateValues*
  commentId: Overload:CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithRevereselySortedDuplicateValues
  name: Sort_WithRevereselySortedDuplicateValues
  nameWithType: HeapSortTests.Sort_WithRevereselySortedDuplicateValues
  fullName: CSFundamentalsTests.Algorithms.Sort.HeapSortTests.Sort_WithRevereselySortedDuplicateValues
