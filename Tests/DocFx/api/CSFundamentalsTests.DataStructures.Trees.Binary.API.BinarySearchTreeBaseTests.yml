### YamlMime:ManagedReference
items:
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  commentId: T:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  id: BinarySearchTreeBaseTests
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API
  children:
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_Success
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_Success
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.GetAllPathToNullLeaves
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty``3(``0)
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.Initialize
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InOrderTraversal
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InsertBST_WithoutBalancing
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateLeft
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateRight
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Failure
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Success
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Failue
  - CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Success
  langs:
  - csharp
  - vb
  name: BinarySearchTreeBaseTests
  nameWithType: BinarySearchTreeBaseTests
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  type: Class
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: BinarySearchTreeBaseTests
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 31
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests methods in <xref href=\"CSFundamentals.DataStructures.Trees.Binary.API.BinaryTreeNode%603\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: >-
      [TestClass]

      public class BinarySearchTreeBaseTests
    content.vb: >-
      <TestClass>

      Public Class BinarySearchTreeBaseTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.Initialize
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.Initialize
  id: Initialize
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: BinarySearchTreeBaseTests.Initialize()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.Initialize()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Initialize
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 40
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nInitializes/Resets variables before executing each unit test in this class. \n"
  example: []
  syntax:
    content: >-
      [TestInitialize]

      public void Initialize()
    content.vb: >-
      <TestInitialize>

      Public Sub Initialize
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.Initialize*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateLeft
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateLeft
  id: RotateLeft
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: RotateLeft()
  nameWithType: BinarySearchTreeBaseTests.RotateLeft()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateLeft()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: RotateLeft
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 86
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of rotate left operation. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void RotateLeft()
    content.vb: >-
      <TestMethod>

      Public Sub RotateLeft
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateLeft*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateRight
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateRight
  id: RotateRight
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: RotateRight()
  nameWithType: BinarySearchTreeBaseTests.RotateRight()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateRight()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: RotateRight
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 156
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of rotate right operation. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void RotateRight()
    content.vb: >-
      <TestMethod>

      Public Sub RotateRight
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateRight*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Success
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Success
  id: SearchBST_Success
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: SearchBST_Success()
  nameWithType: BinarySearchTreeBaseTests.SearchBST_Success()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Success()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: SearchBST_Success
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 226
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of search operation. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void SearchBST_Success()
    content.vb: >-
      <TestMethod>

      Public Sub SearchBST_Success
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Success*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Failure
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Failure
  id: SearchBST_Failure
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: SearchBST_Failure()
  nameWithType: BinarySearchTreeBaseTests.SearchBST_Failure()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Failure()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: SearchBST_Failure
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 241
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of search operation when looking for a non existing key. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void SearchBST_Failure()
    content.vb: >-
      <TestMethod>

      Public Sub SearchBST_Failure
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Failure*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Success
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Success
  id: UpdateBST_Success
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: UpdateBST_Success()
  nameWithType: BinarySearchTreeBaseTests.UpdateBST_Success()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Success()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: UpdateBST_Success
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 251
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of Update operation.\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void UpdateBST_Success()
    content.vb: >-
      <TestMethod>

      Public Sub UpdateBST_Success
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Success*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Failue
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Failue
  id: UpdateBST_Failue
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: UpdateBST_Failue()
  nameWithType: BinarySearchTreeBaseTests.UpdateBST_Failue()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Failue()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: UpdateBST_Failue
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 262
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTesting the correctness of Update operation when root is null or the key does not exist in the tree. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void UpdateBST_Failue()
    content.vb: >-
      <TestMethod>

      Public Sub UpdateBST_Failue
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Failue*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_Success
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_Success
  id: FindMinBST_Success
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: FindMinBST_Success()
  nameWithType: BinarySearchTreeBaseTests.FindMinBST_Success()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_Success()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: FindMinBST_Success
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 275
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of finding minimum key in a binary search tree. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void FindMinBST_Success()
    content.vb: >-
      <TestMethod>

      Public Sub FindMinBST_Success
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_Success*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException
  id: FindMinBST_NodeIsNull_ThrowsException
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: FindMinBST_NodeIsNull_ThrowsException()
  nameWithType: BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: FindMinBST_NodeIsNull_ThrowsException
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 290
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of finding minimum key in an empty node. Expects an exception to be thrown. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(ArgumentNullException))]

      public void FindMinBST_NodeIsNull_ThrowsException()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(ArgumentNullException))>

      Public Sub FindMinBST_NodeIsNull_ThrowsException
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ArgumentNullException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_Success
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_Success
  id: FindMaxBST_Success
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: FindMaxBST_Success()
  nameWithType: BinarySearchTreeBaseTests.FindMaxBST_Success()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_Success()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: FindMaxBST_Success
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 300
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of finding the maximum key in a binary search tree. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void FindMaxBST_Success()
    content.vb: >-
      <TestMethod>

      Public Sub FindMaxBST_Success
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_Success*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException
  id: FindMaxBST_NodeIsNull_ThrowsException
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: FindMaxBST_NodeIsNull_ThrowsException()
  nameWithType: BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: FindMaxBST_NodeIsNull_ThrowsException
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 315
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of finding the maximum key in a binary search tree rooted in a null node. Expects an exception to be thrown. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(ArgumentNullException))]

      public void FindMaxBST_NodeIsNull_ThrowsException()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(ArgumentNullException))>

      Public Sub FindMaxBST_NodeIsNull_ThrowsException
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ArgumentNullException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InsertBST_WithoutBalancing
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InsertBST_WithoutBalancing
  id: InsertBST_WithoutBalancing
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: InsertBST_WithoutBalancing()
  nameWithType: BinarySearchTreeBaseTests.InsertBST_WithoutBalancing()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InsertBST_WithoutBalancing()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: InsertBST_WithoutBalancing
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 325
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of Insert operation in a binary search tree. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void InsertBST_WithoutBalancing()
    content.vb: >-
      <TestMethod>

      Public Sub InsertBST_WithoutBalancing
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InsertBST_WithoutBalancing*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InOrderTraversal
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InOrderTraversal
  id: InOrderTraversal
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: InOrderTraversal()
  nameWithType: BinarySearchTreeBaseTests.InOrderTraversal()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InOrderTraversal()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: InOrderTraversal
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 367
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of in-order traversal. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void InOrderTraversal()
    content.vb: >-
      <TestMethod>

      Public Sub InOrderTraversal
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InOrderTraversal*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.GetAllPathToNullLeaves
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.GetAllPathToNullLeaves
  id: GetAllPathToNullLeaves
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: GetAllPathToNullLeaves()
  nameWithType: BinarySearchTreeBaseTests.GetAllPathToNullLeaves()
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.GetAllPathToNullLeaves()
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: GetAllPathToNullLeaves
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 382
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nTests the correctness of getting all the paths to all the leaf nodes in the tree. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void GetAllPathToNullLeaves()
    content.vb: >-
      <TestMethod>

      Public Sub GetAllPathToNullLeaves
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.GetAllPathToNullLeaves*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty``3(``0)
  commentId: M:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty``3(``0)
  id: HasBinarySearchTreeOrderProperty``3(``0)
  parent: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests
  langs:
  - csharp
  - vb
  name: HasBinarySearchTreeOrderProperty<TNode, TKey, TValue>(TNode)
  nameWithType: BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty<TNode, TKey, TValue>(TNode)
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty<TNode, TKey, TValue>(TNode)
  type: Method
  source:
    remote:
      path: Tests/DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: HasBinarySearchTreeOrderProperty
    path: ../DataStructures/Trees/Binary/API/BinarySearchTreeBaseTests.cs
    startLine: 396
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.Trees.Binary.API
  summary: "\nGiven the root of a binary search tree, checks whether the binary search tree properties hold.\n"
  example: []
  syntax:
    content: >-
      public static bool HasBinarySearchTreeOrderProperty<TNode, TKey, TValue>(TNode root)

          where TNode : IBinaryTreeNode<TNode, TKey, TValue> where TKey : IComparable<TKey>, IEquatable<TKey>
    parameters:
    - id: root
      type: '{TNode}'
      description: 'Is the root of a binary search tree. '
    typeParameters:
    - id: TNode
      description: 'Type of the nodes in the tree. '
    - id: TKey
      description: 'Specifies the type of the keys in tree. '
    - id: TValue
      description: 'Specifies the type of the values in tree nodes. '
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasBinarySearchTreeOrderProperty(Of TNode As IBinaryTreeNode(Of TNode, TKey, TValue), TKey As {IComparable(Of TKey), IEquatable(Of TKey)}, TValue)(root As TNode) As Boolean
  overload: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty*
  nameWithType.vb: BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty(Of TNode, TKey, TValue)(TNode)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty(Of TNode, TKey, TValue)(TNode)
  name.vb: HasBinarySearchTreeOrderProperty(Of TNode, TKey, TValue)(TNode)
references:
- uid: CSFundamentals.DataStructures.Trees.Binary.API.BinaryTreeNode`3
  commentId: T:CSFundamentals.DataStructures.Trees.Binary.API.BinaryTreeNode`3
  name: BinaryTreeNode<TNode, TKey, TValue>
  nameWithType: BinaryTreeNode<TNode, TKey, TValue>
  fullName: CSFundamentals.DataStructures.Trees.Binary.API.BinaryTreeNode<TNode, TKey, TValue>
  nameWithType.vb: BinaryTreeNode(Of TNode, TKey, TValue)
  fullName.vb: CSFundamentals.DataStructures.Trees.Binary.API.BinaryTreeNode(Of TNode, TKey, TValue)
  name.vb: BinaryTreeNode(Of TNode, TKey, TValue)
  spec.csharp:
  - uid: CSFundamentals.DataStructures.Trees.Binary.API.BinaryTreeNode`3
    name: BinaryTreeNode
    nameWithType: BinaryTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.API.BinaryTreeNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CSFundamentals.DataStructures.Trees.Binary.API.BinaryTreeNode`3
    name: BinaryTreeNode
    nameWithType: BinaryTreeNode
    fullName: CSFundamentals.DataStructures.Trees.Binary.API.BinaryTreeNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API
  commentId: N:CSFundamentalsTests.DataStructures.Trees.Binary.API
  name: CSFundamentalsTests.DataStructures.Trees.Binary.API
  nameWithType: CSFundamentalsTests.DataStructures.Trees.Binary.API
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.Initialize*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.Initialize
  name: Initialize
  nameWithType: BinarySearchTreeBaseTests.Initialize
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.Initialize
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateLeft*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateLeft
  name: RotateLeft
  nameWithType: BinarySearchTreeBaseTests.RotateLeft
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateLeft
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateRight*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateRight
  name: RotateRight
  nameWithType: BinarySearchTreeBaseTests.RotateRight
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.RotateRight
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Success*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Success
  name: SearchBST_Success
  nameWithType: BinarySearchTreeBaseTests.SearchBST_Success
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Success
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Failure*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Failure
  name: SearchBST_Failure
  nameWithType: BinarySearchTreeBaseTests.SearchBST_Failure
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.SearchBST_Failure
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Success*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Success
  name: UpdateBST_Success
  nameWithType: BinarySearchTreeBaseTests.UpdateBST_Success
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Success
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Failue*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Failue
  name: UpdateBST_Failue
  nameWithType: BinarySearchTreeBaseTests.UpdateBST_Failue
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.UpdateBST_Failue
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_Success*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_Success
  name: FindMinBST_Success
  nameWithType: BinarySearchTreeBaseTests.FindMinBST_Success
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_Success
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException
  name: FindMinBST_NodeIsNull_ThrowsException
  nameWithType: BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMinBST_NodeIsNull_ThrowsException
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_Success*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_Success
  name: FindMaxBST_Success
  nameWithType: BinarySearchTreeBaseTests.FindMaxBST_Success
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_Success
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException
  name: FindMaxBST_NodeIsNull_ThrowsException
  nameWithType: BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.FindMaxBST_NodeIsNull_ThrowsException
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InsertBST_WithoutBalancing*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InsertBST_WithoutBalancing
  name: InsertBST_WithoutBalancing
  nameWithType: BinarySearchTreeBaseTests.InsertBST_WithoutBalancing
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InsertBST_WithoutBalancing
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InOrderTraversal*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InOrderTraversal
  name: InOrderTraversal
  nameWithType: BinarySearchTreeBaseTests.InOrderTraversal
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.InOrderTraversal
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.GetAllPathToNullLeaves*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.GetAllPathToNullLeaves
  name: GetAllPathToNullLeaves
  nameWithType: BinarySearchTreeBaseTests.GetAllPathToNullLeaves
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.GetAllPathToNullLeaves
- uid: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty*
  commentId: Overload:CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty
  name: HasBinarySearchTreeOrderProperty
  nameWithType: BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty
  fullName: CSFundamentalsTests.DataStructures.Trees.Binary.API.BinarySearchTreeBaseTests.HasBinarySearchTreeOrderProperty
- uid: '{TNode}'
  commentId: '!:TNode'
  definition: TNode
  name: TNode
  nameWithType: TNode
  fullName: TNode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TNode
  name: TNode
  nameWithType: TNode
  fullName: TNode
