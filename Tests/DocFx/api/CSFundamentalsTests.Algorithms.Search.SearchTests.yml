### YamlMime:ManagedReference
items:
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests
  commentId: T:CSFundamentalsTests.Algorithms.Search.SearchTests
  id: SearchTests
  parent: CSFundamentalsTests.Algorithms.Search
  children:
  - CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  - CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  - CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  - CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  - CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  - CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  langs:
  - csharp
  - vb
  name: SearchTests
  nameWithType: SearchTests
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests
  type: Class
  source:
    remote:
      path: Tests/Algorithms/Search/SearchTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: SearchTests
    path: ../Algorithms/Search/SearchTests.cs
    startLine: 30
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Search
  summary: "\nImplements test methods for search algorithms. \n"
  example: []
  syntax:
    content: public class SearchTests
    content.vb: Public Class SearchTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  commentId: M:CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  id: DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  parent: CSFundamentalsTests.Algorithms.Search.SearchTests
  langs:
  - csharp
  - vb
  name: DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func<List<Int32>, Int32, Int32, Int32, Int32>)
  nameWithType: SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func<List<Int32>, Int32, Int32, Int32, Int32>)
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func<System.Collections.Generic.List<System.Int32>, System.Int32, System.Int32, System.Int32, System.Int32>)
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Search/SearchTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition
    path: ../Algorithms/Search/SearchTests.cs
    startLine: 44
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Search
  summary: "\nTests the correctness of <code data-dev-comment-type=\"paramref\" class=\"paramref\">searchMethod</code> on an array with distinct elements. \n"
  example: []
  syntax:
    content: public static void DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func<List<int>, int, int, int, int> searchMethod)
    parameters:
    - id: searchMethod
      type: System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32}
      description: 'The search method that is being tested. '
    content.vb: Public Shared Sub DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(searchMethod As Func(Of List(Of Integer), Integer, Integer, Integer, Integer))
  overload: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition*
  nameWithType.vb: SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func(Of List(Of Int32), Int32, Int32, Int32, Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func(Of System.Collections.Generic.List(Of System.Int32), System.Int32, System.Int32, System.Int32, System.Int32))
  name.vb: DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func(Of List(Of Int32), Int32, Int32, Int32, Int32))
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  commentId: M:CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  id: DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  parent: CSFundamentalsTests.Algorithms.Search.SearchTests
  langs:
  - csharp
  - vb
  name: DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func<List<Int32>, Int32, Int32, Int32, Int32>)
  nameWithType: SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func<List<Int32>, Int32, Int32, Int32, Int32>)
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func<System.Collections.Generic.List<System.Int32>, System.Int32, System.Int32, System.Int32, System.Int32>)
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Search/SearchTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed
    path: ../Algorithms/Search/SearchTests.cs
    startLine: 60
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Search
  summary: "\nTests the correctness of <code data-dev-comment-type=\"paramref\" class=\"paramref\">searchMethod</code> on an array with duplicate elements. \n"
  example: []
  syntax:
    content: public static void DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func<List<int>, int, int, int, int> searchMethod)
    parameters:
    - id: searchMethod
      type: System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32}
      description: 'The search method that is being tested. '
    content.vb: Public Shared Sub DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(searchMethod As Func(Of List(Of Integer), Integer, Integer, Integer, Integer))
  overload: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed*
  nameWithType.vb: SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func(Of List(Of Int32), Int32, Int32, Int32, Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func(Of System.Collections.Generic.List(Of System.Int32), System.Int32, System.Int32, System.Int32, System.Int32))
  name.vb: DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func(Of List(Of Int32), Int32, Int32, Int32, Int32))
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  commentId: M:CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  id: NonExistingElements_ExpectsToGetMinusOne(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32})
  parent: CSFundamentalsTests.Algorithms.Search.SearchTests
  langs:
  - csharp
  - vb
  name: NonExistingElements_ExpectsToGetMinusOne(Func<List<Int32>, Int32, Int32, Int32, Int32>)
  nameWithType: SearchTests.NonExistingElements_ExpectsToGetMinusOne(Func<List<Int32>, Int32, Int32, Int32, Int32>)
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func<System.Collections.Generic.List<System.Int32>, System.Int32, System.Int32, System.Int32, System.Int32>)
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Search/SearchTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: NonExistingElements_ExpectsToGetMinusOne
    path: ../Algorithms/Search/SearchTests.cs
    startLine: 72
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Search
  summary: "\nTests the correctness of <code data-dev-comment-type=\"paramref\" class=\"paramref\">searchMethod</code> when the key does not exist in the array. \n"
  example: []
  syntax:
    content: public static void NonExistingElements_ExpectsToGetMinusOne(Func<List<int>, int, int, int, int> searchMethod)
    parameters:
    - id: searchMethod
      type: System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32}
      description: 'The search method that is being tested. '
    content.vb: Public Shared Sub NonExistingElements_ExpectsToGetMinusOne(searchMethod As Func(Of List(Of Integer), Integer, Integer, Integer, Integer))
  overload: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne*
  nameWithType.vb: SearchTests.NonExistingElements_ExpectsToGetMinusOne(Func(Of List(Of Int32), Int32, Int32, Int32, Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func(Of System.Collections.Generic.List(Of System.Int32), System.Int32, System.Int32, System.Int32, System.Int32))
  name.vb: NonExistingElements_ExpectsToGetMinusOne(Func(Of List(Of Int32), Int32, Int32, Int32, Int32))
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  commentId: M:CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  id: DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  parent: CSFundamentalsTests.Algorithms.Search.SearchTests
  langs:
  - csharp
  - vb
  name: DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func<List<Int32>, Int32, Int32>)
  nameWithType: SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func<List<Int32>, Int32, Int32>)
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func<System.Collections.Generic.List<System.Int32>, System.Int32, System.Int32>)
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Search/SearchTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition
    path: ../Algorithms/Search/SearchTests.cs
    startLine: 83
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Search
  summary: "\nTests the correctness of <code data-dev-comment-type=\"paramref\" class=\"paramref\">searchMethod</code> on an array with distinct elements. \n"
  example: []
  syntax:
    content: public static void DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func<List<int>, int, int> searchMethod)
    parameters:
    - id: searchMethod
      type: System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32}
      description: 'The search method that is being tested. '
    content.vb: Public Shared Sub DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(searchMethod As Func(Of List(Of Integer), Integer, Integer))
  overload: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition*
  nameWithType.vb: SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func(Of List(Of Int32), Int32, Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(System.Func(Of System.Collections.Generic.List(Of System.Int32), System.Int32, System.Int32))
  name.vb: DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition(Func(Of List(Of Int32), Int32, Int32))
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  commentId: M:CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  id: DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  parent: CSFundamentalsTests.Algorithms.Search.SearchTests
  langs:
  - csharp
  - vb
  name: DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func<List<Int32>, Int32, Int32>)
  nameWithType: SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func<List<Int32>, Int32, Int32>)
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func<System.Collections.Generic.List<System.Int32>, System.Int32, System.Int32>)
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Search/SearchTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed
    path: ../Algorithms/Search/SearchTests.cs
    startLine: 99
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Search
  summary: "\nTests the correctness of <code data-dev-comment-type=\"paramref\" class=\"paramref\">searchMethod</code> on an array with duplicate elements. \n"
  example: []
  syntax:
    content: public static void DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func<List<int>, int, int> searchMethod)
    parameters:
    - id: searchMethod
      type: System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32}
      description: 'The search method that is being tested. '
    content.vb: Public Shared Sub DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(searchMethod As Func(Of List(Of Integer), Integer, Integer))
  overload: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed*
  nameWithType.vb: SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func(Of List(Of Int32), Int32, Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(System.Func(Of System.Collections.Generic.List(Of System.Int32), System.Int32, System.Int32))
  name.vb: DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed(Func(Of List(Of Int32), Int32, Int32))
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  commentId: M:CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  id: NonExistingElements_ExpectsToGetMinusOne(System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32})
  parent: CSFundamentalsTests.Algorithms.Search.SearchTests
  langs:
  - csharp
  - vb
  name: NonExistingElements_ExpectsToGetMinusOne(Func<List<Int32>, Int32, Int32>)
  nameWithType: SearchTests.NonExistingElements_ExpectsToGetMinusOne(Func<List<Int32>, Int32, Int32>)
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func<System.Collections.Generic.List<System.Int32>, System.Int32, System.Int32>)
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Search/SearchTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: NonExistingElements_ExpectsToGetMinusOne
    path: ../Algorithms/Search/SearchTests.cs
    startLine: 111
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Search
  summary: "\nTests the correctness of <code data-dev-comment-type=\"paramref\" class=\"paramref\">searchMethod</code> when the key does not exist in the array. \n"
  example: []
  syntax:
    content: public static void NonExistingElements_ExpectsToGetMinusOne(Func<List<int>, int, int> searchMethod)
    parameters:
    - id: searchMethod
      type: System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32}
      description: 'The search method that is being tested. '
    content.vb: Public Shared Sub NonExistingElements_ExpectsToGetMinusOne(searchMethod As Func(Of List(Of Integer), Integer, Integer))
  overload: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne*
  nameWithType.vb: SearchTests.NonExistingElements_ExpectsToGetMinusOne(Func(Of List(Of Int32), Int32, Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne(System.Func(Of System.Collections.Generic.List(Of System.Int32), System.Int32, System.Int32))
  name.vb: NonExistingElements_ExpectsToGetMinusOne(Func(Of List(Of Int32), Int32, Int32))
references:
- uid: CSFundamentalsTests.Algorithms.Search
  commentId: N:CSFundamentalsTests.Algorithms.Search
  name: CSFundamentalsTests.Algorithms.Search
  nameWithType: CSFundamentalsTests.Algorithms.Search
  fullName: CSFundamentalsTests.Algorithms.Search
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition*
  commentId: Overload:CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition
  name: DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition
  nameWithType: SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests.DistinctElements_ExpectsToSuccessfullyGetTheIndexOfTheirPosition
- uid: System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32}
  commentId: T:System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.Func`5
  name: Func<List<Int32>, Int32, Int32, Int32, Int32>
  nameWithType: Func<List<Int32>, Int32, Int32, Int32, Int32>
  fullName: System.Func<System.Collections.Generic.List<System.Int32>, System.Int32, System.Int32, System.Int32, System.Int32>
  nameWithType.vb: Func(Of List(Of Int32), Int32, Int32, Int32, Int32)
  fullName.vb: System.Func(Of System.Collections.Generic.List(Of System.Int32), System.Int32, System.Int32, System.Int32, System.Int32)
  name.vb: Func(Of List(Of Int32), Int32, Int32, Int32, Int32)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`5
  commentId: T:System.Func`5
  isExternal: true
  name: Func<T1, T2, T3, T4, TResult>
  nameWithType: Func<T1, T2, T3, T4, TResult>
  fullName: System.Func<T1, T2, T3, T4, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, T4, TResult)
  name.vb: Func(Of T1, T2, T3, T4, TResult)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed*
  commentId: Overload:CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed
  name: DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed
  nameWithType: SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests.DuplicateElements_ExpectsToGetTheIndexOfOneOfTheDupliatesNoMatterHowManyTimeSearchIsPerformed
- uid: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne*
  commentId: Overload:CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne
  name: NonExistingElements_ExpectsToGetMinusOne
  nameWithType: SearchTests.NonExistingElements_ExpectsToGetMinusOne
  fullName: CSFundamentalsTests.Algorithms.Search.SearchTests.NonExistingElements_ExpectsToGetMinusOne
- uid: System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32}
  commentId: T:System.Func{System.Collections.Generic.List{System.Int32},System.Int32,System.Int32}
  parent: System
  definition: System.Func`3
  name: Func<List<Int32>, Int32, Int32>
  nameWithType: Func<List<Int32>, Int32, Int32>
  fullName: System.Func<System.Collections.Generic.List<System.Int32>, System.Int32, System.Int32>
  nameWithType.vb: Func(Of List(Of Int32), Int32, Int32)
  fullName.vb: System.Func(Of System.Collections.Generic.List(Of System.Int32), System.Int32, System.Int32)
  name.vb: Func(Of List(Of Int32), Int32, Int32)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
