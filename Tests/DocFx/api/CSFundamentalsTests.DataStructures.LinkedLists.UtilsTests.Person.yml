### YamlMime:ManagedReference
items:
- uid: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
  commentId: T:CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
  id: UtilsTests.Person
  parent: CSFundamentalsTests.DataStructures.LinkedLists
  children:
  - CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor
  - CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor(System.String)
  - CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Name
  - CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Parent
  langs:
  - csharp
  - vb
  name: UtilsTests.Person
  nameWithType: UtilsTests.Person
  fullName: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
  type: Class
  source:
    remote:
      path: Tests/DataStructures/LinkedLists/UtilsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Person
    path: ../DataStructures/LinkedLists/UtilsTests.cs
    startLine: 63
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.LinkedLists
  summary: "\nIs an example class for testing <xref href=\"CSFundamentals.DataStructures.LinkedLists.Utils.DeepCopy%60%601(%60%600)\" data-throw-if-not-resolved=\"false\"></xref> operation. \n"
  example: []
  syntax:
    content: public class Person
    content.vb: Public Class Person
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Name
  commentId: P:CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Name
  id: Name
  parent: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UtilsTests.Person.Name
  fullName: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Name
  type: Property
  source:
    remote:
      path: Tests/DataStructures/LinkedLists/UtilsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Name
    path: ../DataStructures/LinkedLists/UtilsTests.cs
    startLine: 68
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.LinkedLists
  summary: "\nName of the person. \n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Parent
  commentId: P:CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Parent
  id: Parent
  parent: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: UtilsTests.Person.Parent
  fullName: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Parent
  type: Property
  source:
    remote:
      path: Tests/DataStructures/LinkedLists/UtilsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Parent
    path: ../DataStructures/LinkedLists/UtilsTests.cs
    startLine: 73
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.LinkedLists
  summary: "\nObject storing the parent information of this person.\n"
  example: []
  syntax:
    content: public UtilsTests.Person Parent { get; set; }
    parameters: []
    return:
      type: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
    content.vb: Public Property Parent As UtilsTests.Person
  overload: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Parent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor(System.String)
  commentId: M:CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
  langs:
  - csharp
  - vb
  name: Person(String)
  nameWithType: UtilsTests.Person.Person(String)
  fullName: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Person(System.String)
  type: Constructor
  source:
    remote:
      path: Tests/DataStructures/LinkedLists/UtilsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: .ctor
    path: ../DataStructures/LinkedLists/UtilsTests.cs
    startLine: 79
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.LinkedLists
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public Person(string name)
    parameters:
    - id: name
      type: System.String
      description: 'Name of the person. '
    content.vb: Public Sub New(name As String)
  overload: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor
  commentId: M:CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor
  id: '#ctor'
  parent: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
  langs:
  - csharp
  - vb
  name: Person()
  nameWithType: UtilsTests.Person.Person()
  fullName: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Person()
  type: Constructor
  source:
    remote:
      path: Tests/DataStructures/LinkedLists/UtilsTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: .ctor
    path: ../DataStructures/LinkedLists/UtilsTests.cs
    startLine: 87
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.DataStructures.LinkedLists
  summary: "\nParameter-less constructor needed for serializing and deserailizing. \n"
  example: []
  syntax:
    content: public Person()
    content.vb: Public Sub New
  overload: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CSFundamentals.DataStructures.LinkedLists.Utils.DeepCopy``1(``0)
  commentId: M:CSFundamentals.DataStructures.LinkedLists.Utils.DeepCopy``1(``0)
  isExternal: true
- uid: CSFundamentalsTests.DataStructures.LinkedLists
  commentId: N:CSFundamentalsTests.DataStructures.LinkedLists
  name: CSFundamentalsTests.DataStructures.LinkedLists
  nameWithType: CSFundamentalsTests.DataStructures.LinkedLists
  fullName: CSFundamentalsTests.DataStructures.LinkedLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Name*
  commentId: Overload:CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Name
  name: Name
  nameWithType: UtilsTests.Person.Name
  fullName: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Parent*
  commentId: Overload:CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Parent
  name: Parent
  nameWithType: UtilsTests.Person.Parent
  fullName: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Parent
- uid: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
  commentId: T:CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
  parent: CSFundamentalsTests.DataStructures.LinkedLists
  name: UtilsTests.Person
  nameWithType: UtilsTests.Person
  fullName: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person
- uid: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor*
  commentId: Overload:CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.#ctor
  name: Person
  nameWithType: UtilsTests.Person.Person
  fullName: CSFundamentalsTests.DataStructures.LinkedLists.UtilsTests.Person.Person
