### YamlMime:ManagedReference
items:
- uid: CSFundamentalsTests.Algorithms.Sort.RadixSortTests
  commentId: T:CSFundamentalsTests.Algorithms.Sort.RadixSortTests
  id: RadixSortTests
  parent: CSFundamentalsTests.Algorithms.Sort
  children:
  - CSFundamentalsTests.Algorithms.Sort.RadixSortTests.IsStable
  - CSFundamentalsTests.Algorithms.Sort.RadixSortTests.Sort_Iterative_V1_WithDifferentInputs
  langs:
  - csharp
  - vb
  name: RadixSortTests
  nameWithType: RadixSortTests
  fullName: CSFundamentalsTests.Algorithms.Sort.RadixSortTests
  type: Class
  source:
    remote:
      path: Tests/Algorithms/Sort/StabilityCheckableVersions/RadixSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: RadixSortTests
    path: ../Algorithms/Sort/StabilityCheckableVersions/RadixSortTests.cs
    startLine: 27
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests methods in <xref href=\"CSFundamentals.Algorithms.Sort.RadixSort\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: >-
      [TestClass]

      public class RadixSortTests
    content.vb: >-
      <TestClass>

      Public Class RadixSortTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.Sort_Iterative_V1_WithDifferentInputs
  commentId: M:CSFundamentalsTests.Algorithms.Sort.RadixSortTests.Sort_Iterative_V1_WithDifferentInputs
  id: Sort_Iterative_V1_WithDifferentInputs
  parent: CSFundamentalsTests.Algorithms.Sort.RadixSortTests
  langs:
  - csharp
  - vb
  name: Sort_Iterative_V1_WithDifferentInputs()
  nameWithType: RadixSortTests.Sort_Iterative_V1_WithDifferentInputs()
  fullName: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.Sort_Iterative_V1_WithDifferentInputs()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Sort/RadixSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: Sort_Iterative_V1_WithDifferentInputs
    path: ../Algorithms/Sort/RadixSortTests.cs
    startLine: 34
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests the correctness of Radix sort algorithm.\n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Sort_Iterative_V1_WithDifferentInputs()
    content.vb: >-
      <TestMethod>

      Public Sub Sort_Iterative_V1_WithDifferentInputs
  overload: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.Sort_Iterative_V1_WithDifferentInputs*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.IsStable
  commentId: M:CSFundamentalsTests.Algorithms.Sort.RadixSortTests.IsStable
  id: IsStable
  parent: CSFundamentalsTests.Algorithms.Sort.RadixSortTests
  langs:
  - csharp
  - vb
  name: IsStable()
  nameWithType: RadixSortTests.IsStable()
  fullName: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.IsStable()
  type: Method
  source:
    remote:
      path: Tests/Algorithms/Sort/StabilityCheckableVersions/RadixSortTests.cs
      branch: dev/pijei/AddingDocFx
      repo: https://github.com/PiJei/CSFundamentalAlgorithms.git
    id: IsStable
    path: ../Algorithms/Sort/StabilityCheckableVersions/RadixSortTests.cs
    startLine: 32
  assemblies:
  - CSFundamentalsTests
  namespace: CSFundamentalsTests.Algorithms.Sort
  summary: "\nTests the stability of Radix sort algorithm. \n"
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void IsStable()
    content.vb: >-
      <TestMethod>

      Public Sub IsStable
  overload: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.IsStable*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CSFundamentals.Algorithms.Sort.RadixSort
  commentId: T:CSFundamentals.Algorithms.Sort.RadixSort
  isExternal: true
- uid: CSFundamentalsTests.Algorithms.Sort
  commentId: N:CSFundamentalsTests.Algorithms.Sort
  name: CSFundamentalsTests.Algorithms.Sort
  nameWithType: CSFundamentalsTests.Algorithms.Sort
  fullName: CSFundamentalsTests.Algorithms.Sort
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.Sort_Iterative_V1_WithDifferentInputs*
  commentId: Overload:CSFundamentalsTests.Algorithms.Sort.RadixSortTests.Sort_Iterative_V1_WithDifferentInputs
  name: Sort_Iterative_V1_WithDifferentInputs
  nameWithType: RadixSortTests.Sort_Iterative_V1_WithDifferentInputs
  fullName: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.Sort_Iterative_V1_WithDifferentInputs
- uid: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.IsStable*
  commentId: Overload:CSFundamentalsTests.Algorithms.Sort.RadixSortTests.IsStable
  name: IsStable
  nameWithType: RadixSortTests.IsStable
  fullName: CSFundamentalsTests.Algorithms.Sort.RadixSortTests.IsStable
